
Encoder_mode.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000013c8  080001d0  080001d0  000101d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000098  08001598  08001598  00011598  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  08001630  08001630  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001630  08001630  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001630  08001630  00011630  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001634  08001634  00011634  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  08001638  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000040  20000064  0800169c  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  200000a4  0800169c  000200a4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002d87  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000880  00000000  00000000  00022e1b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000170  00000000  00000000  000236a0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000118  00000000  00000000  00023810  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000e074  00000000  00000000  00023928  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001e29  00000000  00000000  0003199c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00046ff2  00000000  00000000  000337c5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000053  00000000  00000000  0007a7b7  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c08  00000000  00000000  0007a80c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	; (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	; (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	; (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000064 	.word	0x20000064
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08001580 	.word	0x08001580

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	; (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	; (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	; (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000068 	.word	0x20000068
 800020c:	08001580 	.word	0x08001580

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <read_encoder>:
#include"stm32f410rx.h"
#include "Encoder_mode.h"
uint32_t previous=0;
uint32_t new;
uint32_t read_encoder(void)
{new=TIM1->CNT;
 80002b0:	b480      	push	{r7}
 80002b2:	af00      	add	r7, sp, #0
 80002b4:	4b05      	ldr	r3, [pc, #20]	; (80002cc <read_encoder+0x1c>)
 80002b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80002b8:	4a05      	ldr	r2, [pc, #20]	; (80002d0 <read_encoder+0x20>)
 80002ba:	6013      	str	r3, [r2, #0]

return (TIM1->CNT);
 80002bc:	4b03      	ldr	r3, [pc, #12]	; (80002cc <read_encoder+0x1c>)
 80002be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
}
 80002c0:	4618      	mov	r0, r3
 80002c2:	46bd      	mov	sp, r7
 80002c4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c8:	4770      	bx	lr
 80002ca:	bf00      	nop
 80002cc:	40010000 	.word	0x40010000
 80002d0:	2000008c 	.word	0x2000008c

080002d4 <Encoder_mode_TIM1>:


void Encoder_mode_TIM1(void)
   {/*enable clock acess to GPIOA*/
 80002d4:	b480      	push	{r7}
 80002d6:	af00      	add	r7, sp, #0
	RCC->AHB1ENR|=(1U<<0);
 80002d8:	4b28      	ldr	r3, [pc, #160]	; (800037c <Encoder_mode_TIM1+0xa8>)
 80002da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002dc:	4a27      	ldr	r2, [pc, #156]	; (800037c <Encoder_mode_TIM1+0xa8>)
 80002de:	f043 0301 	orr.w	r3, r3, #1
 80002e2:	6313      	str	r3, [r2, #48]	; 0x30
	/*set PA8 AND PA9 TO alternate func*/
	GPIOA->MODER|=(1U<<17);
 80002e4:	4b26      	ldr	r3, [pc, #152]	; (8000380 <Encoder_mode_TIM1+0xac>)
 80002e6:	681b      	ldr	r3, [r3, #0]
 80002e8:	4a25      	ldr	r2, [pc, #148]	; (8000380 <Encoder_mode_TIM1+0xac>)
 80002ea:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80002ee:	6013      	str	r3, [r2, #0]
	GPIOA->MODER|=(1U<<19);
 80002f0:	4b23      	ldr	r3, [pc, #140]	; (8000380 <Encoder_mode_TIM1+0xac>)
 80002f2:	681b      	ldr	r3, [r3, #0]
 80002f4:	4a22      	ldr	r2, [pc, #136]	; (8000380 <Encoder_mode_TIM1+0xac>)
 80002f6:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 80002fa:	6013      	str	r3, [r2, #0]
	/*Set PA8 and PA9 alternate func to AF1*/
	GPIOA->AFR[1]|=(1U<<0);
 80002fc:	4b20      	ldr	r3, [pc, #128]	; (8000380 <Encoder_mode_TIM1+0xac>)
 80002fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8000300:	4a1f      	ldr	r2, [pc, #124]	; (8000380 <Encoder_mode_TIM1+0xac>)
 8000302:	f043 0301 	orr.w	r3, r3, #1
 8000306:	6253      	str	r3, [r2, #36]	; 0x24
	GPIOA->AFR[1]|=(1U<<4);
 8000308:	4b1d      	ldr	r3, [pc, #116]	; (8000380 <Encoder_mode_TIM1+0xac>)
 800030a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800030c:	4a1c      	ldr	r2, [pc, #112]	; (8000380 <Encoder_mode_TIM1+0xac>)
 800030e:	f043 0310 	orr.w	r3, r3, #16
 8000312:	6253      	str	r3, [r2, #36]	; 0x24

	/*enable clock access to timer*/
		RCC->APB2ENR|=(1U<<0);
 8000314:	4b19      	ldr	r3, [pc, #100]	; (800037c <Encoder_mode_TIM1+0xa8>)
 8000316:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000318:	4a18      	ldr	r2, [pc, #96]	; (800037c <Encoder_mode_TIM1+0xa8>)
 800031a:	f043 0301 	orr.w	r3, r3, #1
 800031e:	6453      	str	r3, [r2, #68]	; 0x44




	/*Set the channels menish fehem barsha chyaamel lhak*/
	TIM1->CCMR1|=(1U<<8);
 8000320:	4b18      	ldr	r3, [pc, #96]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 8000322:	699b      	ldr	r3, [r3, #24]
 8000324:	4a17      	ldr	r2, [pc, #92]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 8000326:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800032a:	6193      	str	r3, [r2, #24]
	TIM1->CCMR1|=(1U<<0);
 800032c:	4b15      	ldr	r3, [pc, #84]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800032e:	699b      	ldr	r3, [r3, #24]
 8000330:	4a14      	ldr	r2, [pc, #80]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 8000332:	f043 0301 	orr.w	r3, r3, #1
 8000336:	6193      	str	r3, [r2, #24]
	/*set both channels to input*/

	/*Set encoder mode*/
	TIM1->SMCR|=(1U<<0);
 8000338:	4b12      	ldr	r3, [pc, #72]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800033a:	689b      	ldr	r3, [r3, #8]
 800033c:	4a11      	ldr	r2, [pc, #68]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800033e:	f043 0301 	orr.w	r3, r3, #1
 8000342:	6093      	str	r3, [r2, #8]
	TIM1->SMCR|=(1U<<1);
 8000344:	4b0f      	ldr	r3, [pc, #60]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 8000346:	689b      	ldr	r3, [r3, #8]
 8000348:	4a0e      	ldr	r2, [pc, #56]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800034a:	f043 0302 	orr.w	r3, r3, #2
 800034e:	6093      	str	r3, [r2, #8]
	/*Set ARR Value*/
	TIM1->ARR=0b1111111111111111;
 8000350:	4b0c      	ldr	r3, [pc, #48]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 8000352:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8000356:	62da      	str	r2, [r3, #44]	; 0x2c
	/*enable timer*/
	TIM1->CR1|=(1U<<0);
 8000358:	4b0a      	ldr	r3, [pc, #40]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800035a:	681b      	ldr	r3, [r3, #0]
 800035c:	4a09      	ldr	r2, [pc, #36]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800035e:	f043 0301 	orr.w	r3, r3, #1
 8000362:	6013      	str	r3, [r2, #0]
	/*Set timer as a downcounter*/
	TIM1->CR1|=(1U<<4);
 8000364:	4b07      	ldr	r3, [pc, #28]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 8000366:	681b      	ldr	r3, [r3, #0]
 8000368:	4a06      	ldr	r2, [pc, #24]	; (8000384 <Encoder_mode_TIM1+0xb0>)
 800036a:	f043 0310 	orr.w	r3, r3, #16
 800036e:	6013      	str	r3, [r2, #0]





	}
 8000370:	bf00      	nop
 8000372:	46bd      	mov	sp, r7
 8000374:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000378:	4770      	bx	lr
 800037a:	bf00      	nop
 800037c:	40023800 	.word	0x40023800
 8000380:	40020000 	.word	0x40020000
 8000384:	40010000 	.word	0x40010000

08000388 <main>:

int a;


                 int main(void)
{Encoder_mode_TIM1();
 8000388:	b580      	push	{r7, lr}
 800038a:	af00      	add	r7, sp, #0
 800038c:	f7ff ffa2 	bl	80002d4 <Encoder_mode_TIM1>
UART_TX_init();
 8000390:	f000 f8e6 	bl	8000560 <UART_TX_init>

while(1){a=read_encoder();
 8000394:	f7ff ff8c 	bl	80002b0 <read_encoder>
 8000398:	4603      	mov	r3, r0
 800039a:	461a      	mov	r2, r3
 800039c:	4b04      	ldr	r3, [pc, #16]	; (80003b0 <main+0x28>)
 800039e:	601a      	str	r2, [r3, #0]
	printf(read_encoder());
 80003a0:	f7ff ff86 	bl	80002b0 <read_encoder>
 80003a4:	4603      	mov	r3, r0
 80003a6:	4618      	mov	r0, r3
 80003a8:	f000 f994 	bl	80006d4 <iprintf>
while(1){a=read_encoder();
 80003ac:	e7f2      	b.n	8000394 <main+0xc>
 80003ae:	bf00      	nop
 80003b0:	20000090 	.word	0x20000090

080003b4 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80003b4:	b580      	push	{r7, lr}
 80003b6:	b086      	sub	sp, #24
 80003b8:	af00      	add	r7, sp, #0
 80003ba:	60f8      	str	r0, [r7, #12]
 80003bc:	60b9      	str	r1, [r7, #8]
 80003be:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003c0:	2300      	movs	r3, #0
 80003c2:	617b      	str	r3, [r7, #20]
 80003c4:	e00a      	b.n	80003dc <_read+0x28>
	{
		*ptr++ = __io_getchar();
 80003c6:	f3af 8000 	nop.w
 80003ca:	4601      	mov	r1, r0
 80003cc:	68bb      	ldr	r3, [r7, #8]
 80003ce:	1c5a      	adds	r2, r3, #1
 80003d0:	60ba      	str	r2, [r7, #8]
 80003d2:	b2ca      	uxtb	r2, r1
 80003d4:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003d6:	697b      	ldr	r3, [r7, #20]
 80003d8:	3301      	adds	r3, #1
 80003da:	617b      	str	r3, [r7, #20]
 80003dc:	697a      	ldr	r2, [r7, #20]
 80003de:	687b      	ldr	r3, [r7, #4]
 80003e0:	429a      	cmp	r2, r3
 80003e2:	dbf0      	blt.n	80003c6 <_read+0x12>
	}

return len;
 80003e4:	687b      	ldr	r3, [r7, #4]
}
 80003e6:	4618      	mov	r0, r3
 80003e8:	3718      	adds	r7, #24
 80003ea:	46bd      	mov	sp, r7
 80003ec:	bd80      	pop	{r7, pc}

080003ee <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80003ee:	b580      	push	{r7, lr}
 80003f0:	b086      	sub	sp, #24
 80003f2:	af00      	add	r7, sp, #0
 80003f4:	60f8      	str	r0, [r7, #12]
 80003f6:	60b9      	str	r1, [r7, #8]
 80003f8:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80003fa:	2300      	movs	r3, #0
 80003fc:	617b      	str	r3, [r7, #20]
 80003fe:	e009      	b.n	8000414 <_write+0x26>
	{
		__io_putchar(*ptr++);
 8000400:	68bb      	ldr	r3, [r7, #8]
 8000402:	1c5a      	adds	r2, r3, #1
 8000404:	60ba      	str	r2, [r7, #8]
 8000406:	781b      	ldrb	r3, [r3, #0]
 8000408:	4618      	mov	r0, r3
 800040a:	f000 f877 	bl	80004fc <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800040e:	697b      	ldr	r3, [r7, #20]
 8000410:	3301      	adds	r3, #1
 8000412:	617b      	str	r3, [r7, #20]
 8000414:	697a      	ldr	r2, [r7, #20]
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	429a      	cmp	r2, r3
 800041a:	dbf1      	blt.n	8000400 <_write+0x12>
	}
	return len;
 800041c:	687b      	ldr	r3, [r7, #4]
}
 800041e:	4618      	mov	r0, r3
 8000420:	3718      	adds	r7, #24
 8000422:	46bd      	mov	sp, r7
 8000424:	bd80      	pop	{r7, pc}

08000426 <_close>:

int _close(int file)
{
 8000426:	b480      	push	{r7}
 8000428:	b083      	sub	sp, #12
 800042a:	af00      	add	r7, sp, #0
 800042c:	6078      	str	r0, [r7, #4]
	return -1;
 800042e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8000432:	4618      	mov	r0, r3
 8000434:	370c      	adds	r7, #12
 8000436:	46bd      	mov	sp, r7
 8000438:	f85d 7b04 	ldr.w	r7, [sp], #4
 800043c:	4770      	bx	lr

0800043e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800043e:	b480      	push	{r7}
 8000440:	b083      	sub	sp, #12
 8000442:	af00      	add	r7, sp, #0
 8000444:	6078      	str	r0, [r7, #4]
 8000446:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000448:	683b      	ldr	r3, [r7, #0]
 800044a:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 800044e:	605a      	str	r2, [r3, #4]
	return 0;
 8000450:	2300      	movs	r3, #0
}
 8000452:	4618      	mov	r0, r3
 8000454:	370c      	adds	r7, #12
 8000456:	46bd      	mov	sp, r7
 8000458:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045c:	4770      	bx	lr

0800045e <_isatty>:

int _isatty(int file)
{
 800045e:	b480      	push	{r7}
 8000460:	b083      	sub	sp, #12
 8000462:	af00      	add	r7, sp, #0
 8000464:	6078      	str	r0, [r7, #4]
	return 1;
 8000466:	2301      	movs	r3, #1
}
 8000468:	4618      	mov	r0, r3
 800046a:	370c      	adds	r7, #12
 800046c:	46bd      	mov	sp, r7
 800046e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000472:	4770      	bx	lr

08000474 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000474:	b480      	push	{r7}
 8000476:	b085      	sub	sp, #20
 8000478:	af00      	add	r7, sp, #0
 800047a:	60f8      	str	r0, [r7, #12]
 800047c:	60b9      	str	r1, [r7, #8]
 800047e:	607a      	str	r2, [r7, #4]
	return 0;
 8000480:	2300      	movs	r3, #0
}
 8000482:	4618      	mov	r0, r3
 8000484:	3714      	adds	r7, #20
 8000486:	46bd      	mov	sp, r7
 8000488:	f85d 7b04 	ldr.w	r7, [sp], #4
 800048c:	4770      	bx	lr
	...

08000490 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000490:	b580      	push	{r7, lr}
 8000492:	b086      	sub	sp, #24
 8000494:	af00      	add	r7, sp, #0
 8000496:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8000498:	4a14      	ldr	r2, [pc, #80]	; (80004ec <_sbrk+0x5c>)
 800049a:	4b15      	ldr	r3, [pc, #84]	; (80004f0 <_sbrk+0x60>)
 800049c:	1ad3      	subs	r3, r2, r3
 800049e:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80004a0:	697b      	ldr	r3, [r7, #20]
 80004a2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80004a4:	4b13      	ldr	r3, [pc, #76]	; (80004f4 <_sbrk+0x64>)
 80004a6:	681b      	ldr	r3, [r3, #0]
 80004a8:	2b00      	cmp	r3, #0
 80004aa:	d102      	bne.n	80004b2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80004ac:	4b11      	ldr	r3, [pc, #68]	; (80004f4 <_sbrk+0x64>)
 80004ae:	4a12      	ldr	r2, [pc, #72]	; (80004f8 <_sbrk+0x68>)
 80004b0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80004b2:	4b10      	ldr	r3, [pc, #64]	; (80004f4 <_sbrk+0x64>)
 80004b4:	681a      	ldr	r2, [r3, #0]
 80004b6:	687b      	ldr	r3, [r7, #4]
 80004b8:	4413      	add	r3, r2
 80004ba:	693a      	ldr	r2, [r7, #16]
 80004bc:	429a      	cmp	r2, r3
 80004be:	d207      	bcs.n	80004d0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80004c0:	f000 f8d6 	bl	8000670 <__errno>
 80004c4:	4603      	mov	r3, r0
 80004c6:	220c      	movs	r2, #12
 80004c8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80004ca:	f04f 33ff 	mov.w	r3, #4294967295
 80004ce:	e009      	b.n	80004e4 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80004d0:	4b08      	ldr	r3, [pc, #32]	; (80004f4 <_sbrk+0x64>)
 80004d2:	681b      	ldr	r3, [r3, #0]
 80004d4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80004d6:	4b07      	ldr	r3, [pc, #28]	; (80004f4 <_sbrk+0x64>)
 80004d8:	681a      	ldr	r2, [r3, #0]
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	4413      	add	r3, r2
 80004de:	4a05      	ldr	r2, [pc, #20]	; (80004f4 <_sbrk+0x64>)
 80004e0:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80004e2:	68fb      	ldr	r3, [r7, #12]
}
 80004e4:	4618      	mov	r0, r3
 80004e6:	3718      	adds	r7, #24
 80004e8:	46bd      	mov	sp, r7
 80004ea:	bd80      	pop	{r7, pc}
 80004ec:	20008000 	.word	0x20008000
 80004f0:	00000400 	.word	0x00000400
 80004f4:	20000080 	.word	0x20000080
 80004f8:	200000a8 	.word	0x200000a8

080004fc <__io_putchar>:




void senddata(int a);
       char __io_putchar(char ch){
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b082      	sub	sp, #8
 8000500:	af00      	add	r7, sp, #0
 8000502:	4603      	mov	r3, r0
 8000504:	71fb      	strb	r3, [r7, #7]
	                  senddata(ch);
 8000506:	79fb      	ldrb	r3, [r7, #7]
 8000508:	4618      	mov	r0, r3
 800050a:	f000 f871 	bl	80005f0 <senddata>
	                   return(ch);
 800050e:	79fb      	ldrb	r3, [r7, #7]
                           }
 8000510:	4618      	mov	r0, r3
 8000512:	3708      	adds	r7, #8
 8000514:	46bd      	mov	sp, r7
 8000516:	bd80      	pop	{r7, pc}

08000518 <set_baudrate_usart2>:


   static void set_baudrate_usart2(USART_TypeDef* usart,uint32_t freq , uint32_t baud)
          {usart->BRR|=(1U<<0);
 8000518:	b480      	push	{r7}
 800051a:	b085      	sub	sp, #20
 800051c:	af00      	add	r7, sp, #0
 800051e:	60f8      	str	r0, [r7, #12]
 8000520:	60b9      	str	r1, [r7, #8]
 8000522:	607a      	str	r2, [r7, #4]
 8000524:	68fb      	ldr	r3, [r7, #12]
 8000526:	689b      	ldr	r3, [r3, #8]
 8000528:	f043 0201 	orr.w	r2, r3, #1
 800052c:	68fb      	ldr	r3, [r7, #12]
 800052e:	609a      	str	r2, [r3, #8]
           usart->BRR|=(1U<<1);
 8000530:	68fb      	ldr	r3, [r7, #12]
 8000532:	689b      	ldr	r3, [r3, #8]
 8000534:	f043 0202 	orr.w	r2, r3, #2
 8000538:	68fb      	ldr	r3, [r7, #12]
 800053a:	609a      	str	r2, [r3, #8]
           usart->BRR|=(1U<<3);
 800053c:	68fb      	ldr	r3, [r7, #12]
 800053e:	689b      	ldr	r3, [r3, #8]
 8000540:	f043 0208 	orr.w	r2, r3, #8
 8000544:	68fb      	ldr	r3, [r7, #12]
 8000546:	609a      	str	r2, [r3, #8]
           usart->BRR|=(1U<<7);
 8000548:	68fb      	ldr	r3, [r7, #12]
 800054a:	689b      	ldr	r3, [r3, #8]
 800054c:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 8000550:	68fb      	ldr	r3, [r7, #12]
 8000552:	609a      	str	r2, [r3, #8]
          }
 8000554:	bf00      	nop
 8000556:	3714      	adds	r7, #20
 8000558:	46bd      	mov	sp, r7
 800055a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800055e:	4770      	bx	lr

08000560 <UART_TX_init>:

   void UART_TX_init(void)
        {/*************enable clock access to gpioA *******************/
 8000560:	b580      	push	{r7, lr}
 8000562:	af00      	add	r7, sp, #0
   	   RCC->AHB1ENR|=GPIOAEN;
 8000564:	4b1e      	ldr	r3, [pc, #120]	; (80005e0 <UART_TX_init+0x80>)
 8000566:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000568:	4a1d      	ldr	r2, [pc, #116]	; (80005e0 <UART_TX_init+0x80>)
 800056a:	f043 0301 	orr.w	r3, r3, #1
 800056e:	6313      	str	r3, [r2, #48]	; 0x30


   	   /*************Set mode to alternate func***************/
   	   GPIOA->MODER|=(1U<<5);
 8000570:	4b1c      	ldr	r3, [pc, #112]	; (80005e4 <UART_TX_init+0x84>)
 8000572:	681b      	ldr	r3, [r3, #0]
 8000574:	4a1b      	ldr	r2, [pc, #108]	; (80005e4 <UART_TX_init+0x84>)
 8000576:	f043 0320 	orr.w	r3, r3, #32
 800057a:	6013      	str	r3, [r2, #0]
          GPIOA->MODER&=~(1U<<4);
 800057c:	4b19      	ldr	r3, [pc, #100]	; (80005e4 <UART_TX_init+0x84>)
 800057e:	681b      	ldr	r3, [r3, #0]
 8000580:	4a18      	ldr	r2, [pc, #96]	; (80005e4 <UART_TX_init+0x84>)
 8000582:	f023 0310 	bic.w	r3, r3, #16
 8000586:	6013      	str	r3, [r2, #0]
          /*****Configure to AF7 As indicated in the alternate function mapping */
          GPIOA->AFR[0]|=(1U<<8);
 8000588:	4b16      	ldr	r3, [pc, #88]	; (80005e4 <UART_TX_init+0x84>)
 800058a:	6a1b      	ldr	r3, [r3, #32]
 800058c:	4a15      	ldr	r2, [pc, #84]	; (80005e4 <UART_TX_init+0x84>)
 800058e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8000592:	6213      	str	r3, [r2, #32]
          GPIOA->AFR[0]|=(1U<<9);
 8000594:	4b13      	ldr	r3, [pc, #76]	; (80005e4 <UART_TX_init+0x84>)
 8000596:	6a1b      	ldr	r3, [r3, #32]
 8000598:	4a12      	ldr	r2, [pc, #72]	; (80005e4 <UART_TX_init+0x84>)
 800059a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800059e:	6213      	str	r3, [r2, #32]
          GPIOA->AFR[0]|=(1U<<10);
 80005a0:	4b10      	ldr	r3, [pc, #64]	; (80005e4 <UART_TX_init+0x84>)
 80005a2:	6a1b      	ldr	r3, [r3, #32]
 80005a4:	4a0f      	ldr	r2, [pc, #60]	; (80005e4 <UART_TX_init+0x84>)
 80005a6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80005aa:	6213      	str	r3, [r2, #32]

          /**************enable clock access to usart2******************/
          RCC->APB1ENR|=(1U<<17);
 80005ac:	4b0c      	ldr	r3, [pc, #48]	; (80005e0 <UART_TX_init+0x80>)
 80005ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80005b0:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <UART_TX_init+0x80>)
 80005b2:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80005b6:	6413      	str	r3, [r2, #64]	; 0x40

          /****************CONFIGURE BAUDRATE***********/
          set_baudrate_usart2(USART2,periph_freq,baudrate);
 80005b8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 80005bc:	490a      	ldr	r1, [pc, #40]	; (80005e8 <UART_TX_init+0x88>)
 80005be:	480b      	ldr	r0, [pc, #44]	; (80005ec <UART_TX_init+0x8c>)
 80005c0:	f7ff ffaa 	bl	8000518 <set_baudrate_usart2>
          /*********configure transfert direction */
          USART2->CR1|=(1U<<3);
 80005c4:	4b09      	ldr	r3, [pc, #36]	; (80005ec <UART_TX_init+0x8c>)
 80005c6:	68db      	ldr	r3, [r3, #12]
 80005c8:	4a08      	ldr	r2, [pc, #32]	; (80005ec <UART_TX_init+0x8c>)
 80005ca:	f043 0308 	orr.w	r3, r3, #8
 80005ce:	60d3      	str	r3, [r2, #12]
          /***********enable uart module **************/
          USART2->CR1|=(1U<<13);
 80005d0:	4b06      	ldr	r3, [pc, #24]	; (80005ec <UART_TX_init+0x8c>)
 80005d2:	68db      	ldr	r3, [r3, #12]
 80005d4:	4a05      	ldr	r2, [pc, #20]	; (80005ec <UART_TX_init+0x8c>)
 80005d6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80005da:	60d3      	str	r3, [r2, #12]
            }
 80005dc:	bf00      	nop
 80005de:	bd80      	pop	{r7, pc}
 80005e0:	40023800 	.word	0x40023800
 80005e4:	40020000 	.word	0x40020000
 80005e8:	00f42400 	.word	0x00f42400
 80005ec:	40004400 	.word	0x40004400

080005f0 <senddata>:




   void senddata(int a)
        {/*make sure the Transmit data register is empty : check the STATUS REG */
 80005f0:	b480      	push	{r7}
 80005f2:	b083      	sub	sp, #12
 80005f4:	af00      	add	r7, sp, #0
 80005f6:	6078      	str	r0, [r7, #4]


           	   USART2->DR=a;
 80005f8:	4a07      	ldr	r2, [pc, #28]	; (8000618 <senddata+0x28>)
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	6053      	str	r3, [r2, #4]
           	   while(!(USART2->SR)&&(1U<<6)) {}
 80005fe:	bf00      	nop
 8000600:	4b05      	ldr	r3, [pc, #20]	; (8000618 <senddata+0x28>)
 8000602:	681b      	ldr	r3, [r3, #0]
 8000604:	2b00      	cmp	r3, #0
 8000606:	d0fb      	beq.n	8000600 <senddata+0x10>

        }
 8000608:	bf00      	nop
 800060a:	bf00      	nop
 800060c:	370c      	adds	r7, #12
 800060e:	46bd      	mov	sp, r7
 8000610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000614:	4770      	bx	lr
 8000616:	bf00      	nop
 8000618:	40004400 	.word	0x40004400

0800061c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800061c:	480d      	ldr	r0, [pc, #52]	; (8000654 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800061e:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000620:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000624:	480c      	ldr	r0, [pc, #48]	; (8000658 <LoopForever+0x6>)
  ldr r1, =_edata
 8000626:	490d      	ldr	r1, [pc, #52]	; (800065c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000628:	4a0d      	ldr	r2, [pc, #52]	; (8000660 <LoopForever+0xe>)
  movs r3, #0
 800062a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800062c:	e002      	b.n	8000634 <LoopCopyDataInit>

0800062e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800062e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000630:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000632:	3304      	adds	r3, #4

08000634 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000634:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000636:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000638:	d3f9      	bcc.n	800062e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800063a:	4a0a      	ldr	r2, [pc, #40]	; (8000664 <LoopForever+0x12>)
  ldr r4, =_ebss
 800063c:	4c0a      	ldr	r4, [pc, #40]	; (8000668 <LoopForever+0x16>)
  movs r3, #0
 800063e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000640:	e001      	b.n	8000646 <LoopFillZerobss>

08000642 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000642:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000644:	3204      	adds	r2, #4

08000646 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000646:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000648:	d3fb      	bcc.n	8000642 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800064a:	f000 f817 	bl	800067c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800064e:	f7ff fe9b 	bl	8000388 <main>

08000652 <LoopForever>:

LoopForever:
    b LoopForever
 8000652:	e7fe      	b.n	8000652 <LoopForever>
  ldr   r0, =_estack
 8000654:	20008000 	.word	0x20008000
  ldr r0, =_sdata
 8000658:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800065c:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000660:	08001638 	.word	0x08001638
  ldr r2, =_sbss
 8000664:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 8000668:	200000a4 	.word	0x200000a4

0800066c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800066c:	e7fe      	b.n	800066c <ADC_IRQHandler>
	...

08000670 <__errno>:
 8000670:	4b01      	ldr	r3, [pc, #4]	; (8000678 <__errno+0x8>)
 8000672:	6818      	ldr	r0, [r3, #0]
 8000674:	4770      	bx	lr
 8000676:	bf00      	nop
 8000678:	20000000 	.word	0x20000000

0800067c <__libc_init_array>:
 800067c:	b570      	push	{r4, r5, r6, lr}
 800067e:	4d0d      	ldr	r5, [pc, #52]	; (80006b4 <__libc_init_array+0x38>)
 8000680:	4c0d      	ldr	r4, [pc, #52]	; (80006b8 <__libc_init_array+0x3c>)
 8000682:	1b64      	subs	r4, r4, r5
 8000684:	10a4      	asrs	r4, r4, #2
 8000686:	2600      	movs	r6, #0
 8000688:	42a6      	cmp	r6, r4
 800068a:	d109      	bne.n	80006a0 <__libc_init_array+0x24>
 800068c:	4d0b      	ldr	r5, [pc, #44]	; (80006bc <__libc_init_array+0x40>)
 800068e:	4c0c      	ldr	r4, [pc, #48]	; (80006c0 <__libc_init_array+0x44>)
 8000690:	f000 ff76 	bl	8001580 <_init>
 8000694:	1b64      	subs	r4, r4, r5
 8000696:	10a4      	asrs	r4, r4, #2
 8000698:	2600      	movs	r6, #0
 800069a:	42a6      	cmp	r6, r4
 800069c:	d105      	bne.n	80006aa <__libc_init_array+0x2e>
 800069e:	bd70      	pop	{r4, r5, r6, pc}
 80006a0:	f855 3b04 	ldr.w	r3, [r5], #4
 80006a4:	4798      	blx	r3
 80006a6:	3601      	adds	r6, #1
 80006a8:	e7ee      	b.n	8000688 <__libc_init_array+0xc>
 80006aa:	f855 3b04 	ldr.w	r3, [r5], #4
 80006ae:	4798      	blx	r3
 80006b0:	3601      	adds	r6, #1
 80006b2:	e7f2      	b.n	800069a <__libc_init_array+0x1e>
 80006b4:	08001630 	.word	0x08001630
 80006b8:	08001630 	.word	0x08001630
 80006bc:	08001630 	.word	0x08001630
 80006c0:	08001634 	.word	0x08001634

080006c4 <memset>:
 80006c4:	4402      	add	r2, r0
 80006c6:	4603      	mov	r3, r0
 80006c8:	4293      	cmp	r3, r2
 80006ca:	d100      	bne.n	80006ce <memset+0xa>
 80006cc:	4770      	bx	lr
 80006ce:	f803 1b01 	strb.w	r1, [r3], #1
 80006d2:	e7f9      	b.n	80006c8 <memset+0x4>

080006d4 <iprintf>:
 80006d4:	b40f      	push	{r0, r1, r2, r3}
 80006d6:	4b0a      	ldr	r3, [pc, #40]	; (8000700 <iprintf+0x2c>)
 80006d8:	b513      	push	{r0, r1, r4, lr}
 80006da:	681c      	ldr	r4, [r3, #0]
 80006dc:	b124      	cbz	r4, 80006e8 <iprintf+0x14>
 80006de:	69a3      	ldr	r3, [r4, #24]
 80006e0:	b913      	cbnz	r3, 80006e8 <iprintf+0x14>
 80006e2:	4620      	mov	r0, r4
 80006e4:	f000 f866 	bl	80007b4 <__sinit>
 80006e8:	ab05      	add	r3, sp, #20
 80006ea:	9a04      	ldr	r2, [sp, #16]
 80006ec:	68a1      	ldr	r1, [r4, #8]
 80006ee:	9301      	str	r3, [sp, #4]
 80006f0:	4620      	mov	r0, r4
 80006f2:	f000 f983 	bl	80009fc <_vfiprintf_r>
 80006f6:	b002      	add	sp, #8
 80006f8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80006fc:	b004      	add	sp, #16
 80006fe:	4770      	bx	lr
 8000700:	20000000 	.word	0x20000000

08000704 <std>:
 8000704:	2300      	movs	r3, #0
 8000706:	b510      	push	{r4, lr}
 8000708:	4604      	mov	r4, r0
 800070a:	e9c0 3300 	strd	r3, r3, [r0]
 800070e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8000712:	6083      	str	r3, [r0, #8]
 8000714:	8181      	strh	r1, [r0, #12]
 8000716:	6643      	str	r3, [r0, #100]	; 0x64
 8000718:	81c2      	strh	r2, [r0, #14]
 800071a:	6183      	str	r3, [r0, #24]
 800071c:	4619      	mov	r1, r3
 800071e:	2208      	movs	r2, #8
 8000720:	305c      	adds	r0, #92	; 0x5c
 8000722:	f7ff ffcf 	bl	80006c4 <memset>
 8000726:	4b05      	ldr	r3, [pc, #20]	; (800073c <std+0x38>)
 8000728:	6263      	str	r3, [r4, #36]	; 0x24
 800072a:	4b05      	ldr	r3, [pc, #20]	; (8000740 <std+0x3c>)
 800072c:	62a3      	str	r3, [r4, #40]	; 0x28
 800072e:	4b05      	ldr	r3, [pc, #20]	; (8000744 <std+0x40>)
 8000730:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000732:	4b05      	ldr	r3, [pc, #20]	; (8000748 <std+0x44>)
 8000734:	6224      	str	r4, [r4, #32]
 8000736:	6323      	str	r3, [r4, #48]	; 0x30
 8000738:	bd10      	pop	{r4, pc}
 800073a:	bf00      	nop
 800073c:	08000fa5 	.word	0x08000fa5
 8000740:	08000fc7 	.word	0x08000fc7
 8000744:	08000fff 	.word	0x08000fff
 8000748:	08001023 	.word	0x08001023

0800074c <_cleanup_r>:
 800074c:	4901      	ldr	r1, [pc, #4]	; (8000754 <_cleanup_r+0x8>)
 800074e:	f000 b8af 	b.w	80008b0 <_fwalk_reent>
 8000752:	bf00      	nop
 8000754:	080012fd 	.word	0x080012fd

08000758 <__sfmoreglue>:
 8000758:	b570      	push	{r4, r5, r6, lr}
 800075a:	1e4a      	subs	r2, r1, #1
 800075c:	2568      	movs	r5, #104	; 0x68
 800075e:	4355      	muls	r5, r2
 8000760:	460e      	mov	r6, r1
 8000762:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8000766:	f000 f8c5 	bl	80008f4 <_malloc_r>
 800076a:	4604      	mov	r4, r0
 800076c:	b140      	cbz	r0, 8000780 <__sfmoreglue+0x28>
 800076e:	2100      	movs	r1, #0
 8000770:	e9c0 1600 	strd	r1, r6, [r0]
 8000774:	300c      	adds	r0, #12
 8000776:	60a0      	str	r0, [r4, #8]
 8000778:	f105 0268 	add.w	r2, r5, #104	; 0x68
 800077c:	f7ff ffa2 	bl	80006c4 <memset>
 8000780:	4620      	mov	r0, r4
 8000782:	bd70      	pop	{r4, r5, r6, pc}

08000784 <__sfp_lock_acquire>:
 8000784:	4801      	ldr	r0, [pc, #4]	; (800078c <__sfp_lock_acquire+0x8>)
 8000786:	f000 b8b3 	b.w	80008f0 <__retarget_lock_acquire_recursive>
 800078a:	bf00      	nop
 800078c:	2000009c 	.word	0x2000009c

08000790 <__sfp_lock_release>:
 8000790:	4801      	ldr	r0, [pc, #4]	; (8000798 <__sfp_lock_release+0x8>)
 8000792:	f000 b8ae 	b.w	80008f2 <__retarget_lock_release_recursive>
 8000796:	bf00      	nop
 8000798:	2000009c 	.word	0x2000009c

0800079c <__sinit_lock_acquire>:
 800079c:	4801      	ldr	r0, [pc, #4]	; (80007a4 <__sinit_lock_acquire+0x8>)
 800079e:	f000 b8a7 	b.w	80008f0 <__retarget_lock_acquire_recursive>
 80007a2:	bf00      	nop
 80007a4:	20000097 	.word	0x20000097

080007a8 <__sinit_lock_release>:
 80007a8:	4801      	ldr	r0, [pc, #4]	; (80007b0 <__sinit_lock_release+0x8>)
 80007aa:	f000 b8a2 	b.w	80008f2 <__retarget_lock_release_recursive>
 80007ae:	bf00      	nop
 80007b0:	20000097 	.word	0x20000097

080007b4 <__sinit>:
 80007b4:	b510      	push	{r4, lr}
 80007b6:	4604      	mov	r4, r0
 80007b8:	f7ff fff0 	bl	800079c <__sinit_lock_acquire>
 80007bc:	69a3      	ldr	r3, [r4, #24]
 80007be:	b11b      	cbz	r3, 80007c8 <__sinit+0x14>
 80007c0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80007c4:	f7ff bff0 	b.w	80007a8 <__sinit_lock_release>
 80007c8:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80007cc:	6523      	str	r3, [r4, #80]	; 0x50
 80007ce:	4b13      	ldr	r3, [pc, #76]	; (800081c <__sinit+0x68>)
 80007d0:	4a13      	ldr	r2, [pc, #76]	; (8000820 <__sinit+0x6c>)
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	62a2      	str	r2, [r4, #40]	; 0x28
 80007d6:	42a3      	cmp	r3, r4
 80007d8:	bf04      	itt	eq
 80007da:	2301      	moveq	r3, #1
 80007dc:	61a3      	streq	r3, [r4, #24]
 80007de:	4620      	mov	r0, r4
 80007e0:	f000 f820 	bl	8000824 <__sfp>
 80007e4:	6060      	str	r0, [r4, #4]
 80007e6:	4620      	mov	r0, r4
 80007e8:	f000 f81c 	bl	8000824 <__sfp>
 80007ec:	60a0      	str	r0, [r4, #8]
 80007ee:	4620      	mov	r0, r4
 80007f0:	f000 f818 	bl	8000824 <__sfp>
 80007f4:	2200      	movs	r2, #0
 80007f6:	60e0      	str	r0, [r4, #12]
 80007f8:	2104      	movs	r1, #4
 80007fa:	6860      	ldr	r0, [r4, #4]
 80007fc:	f7ff ff82 	bl	8000704 <std>
 8000800:	68a0      	ldr	r0, [r4, #8]
 8000802:	2201      	movs	r2, #1
 8000804:	2109      	movs	r1, #9
 8000806:	f7ff ff7d 	bl	8000704 <std>
 800080a:	68e0      	ldr	r0, [r4, #12]
 800080c:	2202      	movs	r2, #2
 800080e:	2112      	movs	r1, #18
 8000810:	f7ff ff78 	bl	8000704 <std>
 8000814:	2301      	movs	r3, #1
 8000816:	61a3      	str	r3, [r4, #24]
 8000818:	e7d2      	b.n	80007c0 <__sinit+0xc>
 800081a:	bf00      	nop
 800081c:	08001598 	.word	0x08001598
 8000820:	0800074d 	.word	0x0800074d

08000824 <__sfp>:
 8000824:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000826:	4607      	mov	r7, r0
 8000828:	f7ff ffac 	bl	8000784 <__sfp_lock_acquire>
 800082c:	4b1e      	ldr	r3, [pc, #120]	; (80008a8 <__sfp+0x84>)
 800082e:	681e      	ldr	r6, [r3, #0]
 8000830:	69b3      	ldr	r3, [r6, #24]
 8000832:	b913      	cbnz	r3, 800083a <__sfp+0x16>
 8000834:	4630      	mov	r0, r6
 8000836:	f7ff ffbd 	bl	80007b4 <__sinit>
 800083a:	3648      	adds	r6, #72	; 0x48
 800083c:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8000840:	3b01      	subs	r3, #1
 8000842:	d503      	bpl.n	800084c <__sfp+0x28>
 8000844:	6833      	ldr	r3, [r6, #0]
 8000846:	b30b      	cbz	r3, 800088c <__sfp+0x68>
 8000848:	6836      	ldr	r6, [r6, #0]
 800084a:	e7f7      	b.n	800083c <__sfp+0x18>
 800084c:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8000850:	b9d5      	cbnz	r5, 8000888 <__sfp+0x64>
 8000852:	4b16      	ldr	r3, [pc, #88]	; (80008ac <__sfp+0x88>)
 8000854:	60e3      	str	r3, [r4, #12]
 8000856:	f104 0058 	add.w	r0, r4, #88	; 0x58
 800085a:	6665      	str	r5, [r4, #100]	; 0x64
 800085c:	f000 f847 	bl	80008ee <__retarget_lock_init_recursive>
 8000860:	f7ff ff96 	bl	8000790 <__sfp_lock_release>
 8000864:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8000868:	e9c4 5504 	strd	r5, r5, [r4, #16]
 800086c:	6025      	str	r5, [r4, #0]
 800086e:	61a5      	str	r5, [r4, #24]
 8000870:	2208      	movs	r2, #8
 8000872:	4629      	mov	r1, r5
 8000874:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000878:	f7ff ff24 	bl	80006c4 <memset>
 800087c:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000880:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000884:	4620      	mov	r0, r4
 8000886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000888:	3468      	adds	r4, #104	; 0x68
 800088a:	e7d9      	b.n	8000840 <__sfp+0x1c>
 800088c:	2104      	movs	r1, #4
 800088e:	4638      	mov	r0, r7
 8000890:	f7ff ff62 	bl	8000758 <__sfmoreglue>
 8000894:	4604      	mov	r4, r0
 8000896:	6030      	str	r0, [r6, #0]
 8000898:	2800      	cmp	r0, #0
 800089a:	d1d5      	bne.n	8000848 <__sfp+0x24>
 800089c:	f7ff ff78 	bl	8000790 <__sfp_lock_release>
 80008a0:	230c      	movs	r3, #12
 80008a2:	603b      	str	r3, [r7, #0]
 80008a4:	e7ee      	b.n	8000884 <__sfp+0x60>
 80008a6:	bf00      	nop
 80008a8:	08001598 	.word	0x08001598
 80008ac:	ffff0001 	.word	0xffff0001

080008b0 <_fwalk_reent>:
 80008b0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80008b4:	4606      	mov	r6, r0
 80008b6:	4688      	mov	r8, r1
 80008b8:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80008bc:	2700      	movs	r7, #0
 80008be:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80008c2:	f1b9 0901 	subs.w	r9, r9, #1
 80008c6:	d505      	bpl.n	80008d4 <_fwalk_reent+0x24>
 80008c8:	6824      	ldr	r4, [r4, #0]
 80008ca:	2c00      	cmp	r4, #0
 80008cc:	d1f7      	bne.n	80008be <_fwalk_reent+0xe>
 80008ce:	4638      	mov	r0, r7
 80008d0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80008d4:	89ab      	ldrh	r3, [r5, #12]
 80008d6:	2b01      	cmp	r3, #1
 80008d8:	d907      	bls.n	80008ea <_fwalk_reent+0x3a>
 80008da:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80008de:	3301      	adds	r3, #1
 80008e0:	d003      	beq.n	80008ea <_fwalk_reent+0x3a>
 80008e2:	4629      	mov	r1, r5
 80008e4:	4630      	mov	r0, r6
 80008e6:	47c0      	blx	r8
 80008e8:	4307      	orrs	r7, r0
 80008ea:	3568      	adds	r5, #104	; 0x68
 80008ec:	e7e9      	b.n	80008c2 <_fwalk_reent+0x12>

080008ee <__retarget_lock_init_recursive>:
 80008ee:	4770      	bx	lr

080008f0 <__retarget_lock_acquire_recursive>:
 80008f0:	4770      	bx	lr

080008f2 <__retarget_lock_release_recursive>:
 80008f2:	4770      	bx	lr

080008f4 <_malloc_r>:
 80008f4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80008f6:	1ccd      	adds	r5, r1, #3
 80008f8:	f025 0503 	bic.w	r5, r5, #3
 80008fc:	3508      	adds	r5, #8
 80008fe:	2d0c      	cmp	r5, #12
 8000900:	bf38      	it	cc
 8000902:	250c      	movcc	r5, #12
 8000904:	2d00      	cmp	r5, #0
 8000906:	4606      	mov	r6, r0
 8000908:	db01      	blt.n	800090e <_malloc_r+0x1a>
 800090a:	42a9      	cmp	r1, r5
 800090c:	d903      	bls.n	8000916 <_malloc_r+0x22>
 800090e:	230c      	movs	r3, #12
 8000910:	6033      	str	r3, [r6, #0]
 8000912:	2000      	movs	r0, #0
 8000914:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000916:	f000 fda3 	bl	8001460 <__malloc_lock>
 800091a:	4921      	ldr	r1, [pc, #132]	; (80009a0 <_malloc_r+0xac>)
 800091c:	680a      	ldr	r2, [r1, #0]
 800091e:	4614      	mov	r4, r2
 8000920:	b99c      	cbnz	r4, 800094a <_malloc_r+0x56>
 8000922:	4f20      	ldr	r7, [pc, #128]	; (80009a4 <_malloc_r+0xb0>)
 8000924:	683b      	ldr	r3, [r7, #0]
 8000926:	b923      	cbnz	r3, 8000932 <_malloc_r+0x3e>
 8000928:	4621      	mov	r1, r4
 800092a:	4630      	mov	r0, r6
 800092c:	f000 fb2a 	bl	8000f84 <_sbrk_r>
 8000930:	6038      	str	r0, [r7, #0]
 8000932:	4629      	mov	r1, r5
 8000934:	4630      	mov	r0, r6
 8000936:	f000 fb25 	bl	8000f84 <_sbrk_r>
 800093a:	1c43      	adds	r3, r0, #1
 800093c:	d123      	bne.n	8000986 <_malloc_r+0x92>
 800093e:	230c      	movs	r3, #12
 8000940:	6033      	str	r3, [r6, #0]
 8000942:	4630      	mov	r0, r6
 8000944:	f000 fd92 	bl	800146c <__malloc_unlock>
 8000948:	e7e3      	b.n	8000912 <_malloc_r+0x1e>
 800094a:	6823      	ldr	r3, [r4, #0]
 800094c:	1b5b      	subs	r3, r3, r5
 800094e:	d417      	bmi.n	8000980 <_malloc_r+0x8c>
 8000950:	2b0b      	cmp	r3, #11
 8000952:	d903      	bls.n	800095c <_malloc_r+0x68>
 8000954:	6023      	str	r3, [r4, #0]
 8000956:	441c      	add	r4, r3
 8000958:	6025      	str	r5, [r4, #0]
 800095a:	e004      	b.n	8000966 <_malloc_r+0x72>
 800095c:	6863      	ldr	r3, [r4, #4]
 800095e:	42a2      	cmp	r2, r4
 8000960:	bf0c      	ite	eq
 8000962:	600b      	streq	r3, [r1, #0]
 8000964:	6053      	strne	r3, [r2, #4]
 8000966:	4630      	mov	r0, r6
 8000968:	f000 fd80 	bl	800146c <__malloc_unlock>
 800096c:	f104 000b 	add.w	r0, r4, #11
 8000970:	1d23      	adds	r3, r4, #4
 8000972:	f020 0007 	bic.w	r0, r0, #7
 8000976:	1ac2      	subs	r2, r0, r3
 8000978:	d0cc      	beq.n	8000914 <_malloc_r+0x20>
 800097a:	1a1b      	subs	r3, r3, r0
 800097c:	50a3      	str	r3, [r4, r2]
 800097e:	e7c9      	b.n	8000914 <_malloc_r+0x20>
 8000980:	4622      	mov	r2, r4
 8000982:	6864      	ldr	r4, [r4, #4]
 8000984:	e7cc      	b.n	8000920 <_malloc_r+0x2c>
 8000986:	1cc4      	adds	r4, r0, #3
 8000988:	f024 0403 	bic.w	r4, r4, #3
 800098c:	42a0      	cmp	r0, r4
 800098e:	d0e3      	beq.n	8000958 <_malloc_r+0x64>
 8000990:	1a21      	subs	r1, r4, r0
 8000992:	4630      	mov	r0, r6
 8000994:	f000 faf6 	bl	8000f84 <_sbrk_r>
 8000998:	3001      	adds	r0, #1
 800099a:	d1dd      	bne.n	8000958 <_malloc_r+0x64>
 800099c:	e7cf      	b.n	800093e <_malloc_r+0x4a>
 800099e:	bf00      	nop
 80009a0:	20000084 	.word	0x20000084
 80009a4:	20000088 	.word	0x20000088

080009a8 <__sfputc_r>:
 80009a8:	6893      	ldr	r3, [r2, #8]
 80009aa:	3b01      	subs	r3, #1
 80009ac:	2b00      	cmp	r3, #0
 80009ae:	b410      	push	{r4}
 80009b0:	6093      	str	r3, [r2, #8]
 80009b2:	da08      	bge.n	80009c6 <__sfputc_r+0x1e>
 80009b4:	6994      	ldr	r4, [r2, #24]
 80009b6:	42a3      	cmp	r3, r4
 80009b8:	db01      	blt.n	80009be <__sfputc_r+0x16>
 80009ba:	290a      	cmp	r1, #10
 80009bc:	d103      	bne.n	80009c6 <__sfputc_r+0x1e>
 80009be:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009c2:	f000 bb33 	b.w	800102c <__swbuf_r>
 80009c6:	6813      	ldr	r3, [r2, #0]
 80009c8:	1c58      	adds	r0, r3, #1
 80009ca:	6010      	str	r0, [r2, #0]
 80009cc:	7019      	strb	r1, [r3, #0]
 80009ce:	4608      	mov	r0, r1
 80009d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80009d4:	4770      	bx	lr

080009d6 <__sfputs_r>:
 80009d6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009d8:	4606      	mov	r6, r0
 80009da:	460f      	mov	r7, r1
 80009dc:	4614      	mov	r4, r2
 80009de:	18d5      	adds	r5, r2, r3
 80009e0:	42ac      	cmp	r4, r5
 80009e2:	d101      	bne.n	80009e8 <__sfputs_r+0x12>
 80009e4:	2000      	movs	r0, #0
 80009e6:	e007      	b.n	80009f8 <__sfputs_r+0x22>
 80009e8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80009ec:	463a      	mov	r2, r7
 80009ee:	4630      	mov	r0, r6
 80009f0:	f7ff ffda 	bl	80009a8 <__sfputc_r>
 80009f4:	1c43      	adds	r3, r0, #1
 80009f6:	d1f3      	bne.n	80009e0 <__sfputs_r+0xa>
 80009f8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080009fc <_vfiprintf_r>:
 80009fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000a00:	460d      	mov	r5, r1
 8000a02:	b09d      	sub	sp, #116	; 0x74
 8000a04:	4614      	mov	r4, r2
 8000a06:	4698      	mov	r8, r3
 8000a08:	4606      	mov	r6, r0
 8000a0a:	b118      	cbz	r0, 8000a14 <_vfiprintf_r+0x18>
 8000a0c:	6983      	ldr	r3, [r0, #24]
 8000a0e:	b90b      	cbnz	r3, 8000a14 <_vfiprintf_r+0x18>
 8000a10:	f7ff fed0 	bl	80007b4 <__sinit>
 8000a14:	4b89      	ldr	r3, [pc, #548]	; (8000c3c <_vfiprintf_r+0x240>)
 8000a16:	429d      	cmp	r5, r3
 8000a18:	d11b      	bne.n	8000a52 <_vfiprintf_r+0x56>
 8000a1a:	6875      	ldr	r5, [r6, #4]
 8000a1c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a1e:	07d9      	lsls	r1, r3, #31
 8000a20:	d405      	bmi.n	8000a2e <_vfiprintf_r+0x32>
 8000a22:	89ab      	ldrh	r3, [r5, #12]
 8000a24:	059a      	lsls	r2, r3, #22
 8000a26:	d402      	bmi.n	8000a2e <_vfiprintf_r+0x32>
 8000a28:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a2a:	f7ff ff61 	bl	80008f0 <__retarget_lock_acquire_recursive>
 8000a2e:	89ab      	ldrh	r3, [r5, #12]
 8000a30:	071b      	lsls	r3, r3, #28
 8000a32:	d501      	bpl.n	8000a38 <_vfiprintf_r+0x3c>
 8000a34:	692b      	ldr	r3, [r5, #16]
 8000a36:	b9eb      	cbnz	r3, 8000a74 <_vfiprintf_r+0x78>
 8000a38:	4629      	mov	r1, r5
 8000a3a:	4630      	mov	r0, r6
 8000a3c:	f000 fb5a 	bl	80010f4 <__swsetup_r>
 8000a40:	b1c0      	cbz	r0, 8000a74 <_vfiprintf_r+0x78>
 8000a42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000a44:	07dc      	lsls	r4, r3, #31
 8000a46:	d50e      	bpl.n	8000a66 <_vfiprintf_r+0x6a>
 8000a48:	f04f 30ff 	mov.w	r0, #4294967295
 8000a4c:	b01d      	add	sp, #116	; 0x74
 8000a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000a52:	4b7b      	ldr	r3, [pc, #492]	; (8000c40 <_vfiprintf_r+0x244>)
 8000a54:	429d      	cmp	r5, r3
 8000a56:	d101      	bne.n	8000a5c <_vfiprintf_r+0x60>
 8000a58:	68b5      	ldr	r5, [r6, #8]
 8000a5a:	e7df      	b.n	8000a1c <_vfiprintf_r+0x20>
 8000a5c:	4b79      	ldr	r3, [pc, #484]	; (8000c44 <_vfiprintf_r+0x248>)
 8000a5e:	429d      	cmp	r5, r3
 8000a60:	bf08      	it	eq
 8000a62:	68f5      	ldreq	r5, [r6, #12]
 8000a64:	e7da      	b.n	8000a1c <_vfiprintf_r+0x20>
 8000a66:	89ab      	ldrh	r3, [r5, #12]
 8000a68:	0598      	lsls	r0, r3, #22
 8000a6a:	d4ed      	bmi.n	8000a48 <_vfiprintf_r+0x4c>
 8000a6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000a6e:	f7ff ff40 	bl	80008f2 <__retarget_lock_release_recursive>
 8000a72:	e7e9      	b.n	8000a48 <_vfiprintf_r+0x4c>
 8000a74:	2300      	movs	r3, #0
 8000a76:	9309      	str	r3, [sp, #36]	; 0x24
 8000a78:	2320      	movs	r3, #32
 8000a7a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000a7e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000a82:	2330      	movs	r3, #48	; 0x30
 8000a84:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8000c48 <_vfiprintf_r+0x24c>
 8000a88:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000a8c:	f04f 0901 	mov.w	r9, #1
 8000a90:	4623      	mov	r3, r4
 8000a92:	469a      	mov	sl, r3
 8000a94:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000a98:	b10a      	cbz	r2, 8000a9e <_vfiprintf_r+0xa2>
 8000a9a:	2a25      	cmp	r2, #37	; 0x25
 8000a9c:	d1f9      	bne.n	8000a92 <_vfiprintf_r+0x96>
 8000a9e:	ebba 0b04 	subs.w	fp, sl, r4
 8000aa2:	d00b      	beq.n	8000abc <_vfiprintf_r+0xc0>
 8000aa4:	465b      	mov	r3, fp
 8000aa6:	4622      	mov	r2, r4
 8000aa8:	4629      	mov	r1, r5
 8000aaa:	4630      	mov	r0, r6
 8000aac:	f7ff ff93 	bl	80009d6 <__sfputs_r>
 8000ab0:	3001      	adds	r0, #1
 8000ab2:	f000 80aa 	beq.w	8000c0a <_vfiprintf_r+0x20e>
 8000ab6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000ab8:	445a      	add	r2, fp
 8000aba:	9209      	str	r2, [sp, #36]	; 0x24
 8000abc:	f89a 3000 	ldrb.w	r3, [sl]
 8000ac0:	2b00      	cmp	r3, #0
 8000ac2:	f000 80a2 	beq.w	8000c0a <_vfiprintf_r+0x20e>
 8000ac6:	2300      	movs	r3, #0
 8000ac8:	f04f 32ff 	mov.w	r2, #4294967295
 8000acc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000ad0:	f10a 0a01 	add.w	sl, sl, #1
 8000ad4:	9304      	str	r3, [sp, #16]
 8000ad6:	9307      	str	r3, [sp, #28]
 8000ad8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000adc:	931a      	str	r3, [sp, #104]	; 0x68
 8000ade:	4654      	mov	r4, sl
 8000ae0:	2205      	movs	r2, #5
 8000ae2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ae6:	4858      	ldr	r0, [pc, #352]	; (8000c48 <_vfiprintf_r+0x24c>)
 8000ae8:	f7ff fb92 	bl	8000210 <memchr>
 8000aec:	9a04      	ldr	r2, [sp, #16]
 8000aee:	b9d8      	cbnz	r0, 8000b28 <_vfiprintf_r+0x12c>
 8000af0:	06d1      	lsls	r1, r2, #27
 8000af2:	bf44      	itt	mi
 8000af4:	2320      	movmi	r3, #32
 8000af6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000afa:	0713      	lsls	r3, r2, #28
 8000afc:	bf44      	itt	mi
 8000afe:	232b      	movmi	r3, #43	; 0x2b
 8000b00:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000b04:	f89a 3000 	ldrb.w	r3, [sl]
 8000b08:	2b2a      	cmp	r3, #42	; 0x2a
 8000b0a:	d015      	beq.n	8000b38 <_vfiprintf_r+0x13c>
 8000b0c:	9a07      	ldr	r2, [sp, #28]
 8000b0e:	4654      	mov	r4, sl
 8000b10:	2000      	movs	r0, #0
 8000b12:	f04f 0c0a 	mov.w	ip, #10
 8000b16:	4621      	mov	r1, r4
 8000b18:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000b1c:	3b30      	subs	r3, #48	; 0x30
 8000b1e:	2b09      	cmp	r3, #9
 8000b20:	d94e      	bls.n	8000bc0 <_vfiprintf_r+0x1c4>
 8000b22:	b1b0      	cbz	r0, 8000b52 <_vfiprintf_r+0x156>
 8000b24:	9207      	str	r2, [sp, #28]
 8000b26:	e014      	b.n	8000b52 <_vfiprintf_r+0x156>
 8000b28:	eba0 0308 	sub.w	r3, r0, r8
 8000b2c:	fa09 f303 	lsl.w	r3, r9, r3
 8000b30:	4313      	orrs	r3, r2
 8000b32:	9304      	str	r3, [sp, #16]
 8000b34:	46a2      	mov	sl, r4
 8000b36:	e7d2      	b.n	8000ade <_vfiprintf_r+0xe2>
 8000b38:	9b03      	ldr	r3, [sp, #12]
 8000b3a:	1d19      	adds	r1, r3, #4
 8000b3c:	681b      	ldr	r3, [r3, #0]
 8000b3e:	9103      	str	r1, [sp, #12]
 8000b40:	2b00      	cmp	r3, #0
 8000b42:	bfbb      	ittet	lt
 8000b44:	425b      	neglt	r3, r3
 8000b46:	f042 0202 	orrlt.w	r2, r2, #2
 8000b4a:	9307      	strge	r3, [sp, #28]
 8000b4c:	9307      	strlt	r3, [sp, #28]
 8000b4e:	bfb8      	it	lt
 8000b50:	9204      	strlt	r2, [sp, #16]
 8000b52:	7823      	ldrb	r3, [r4, #0]
 8000b54:	2b2e      	cmp	r3, #46	; 0x2e
 8000b56:	d10c      	bne.n	8000b72 <_vfiprintf_r+0x176>
 8000b58:	7863      	ldrb	r3, [r4, #1]
 8000b5a:	2b2a      	cmp	r3, #42	; 0x2a
 8000b5c:	d135      	bne.n	8000bca <_vfiprintf_r+0x1ce>
 8000b5e:	9b03      	ldr	r3, [sp, #12]
 8000b60:	1d1a      	adds	r2, r3, #4
 8000b62:	681b      	ldr	r3, [r3, #0]
 8000b64:	9203      	str	r2, [sp, #12]
 8000b66:	2b00      	cmp	r3, #0
 8000b68:	bfb8      	it	lt
 8000b6a:	f04f 33ff 	movlt.w	r3, #4294967295
 8000b6e:	3402      	adds	r4, #2
 8000b70:	9305      	str	r3, [sp, #20]
 8000b72:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8000c58 <_vfiprintf_r+0x25c>
 8000b76:	7821      	ldrb	r1, [r4, #0]
 8000b78:	2203      	movs	r2, #3
 8000b7a:	4650      	mov	r0, sl
 8000b7c:	f7ff fb48 	bl	8000210 <memchr>
 8000b80:	b140      	cbz	r0, 8000b94 <_vfiprintf_r+0x198>
 8000b82:	2340      	movs	r3, #64	; 0x40
 8000b84:	eba0 000a 	sub.w	r0, r0, sl
 8000b88:	fa03 f000 	lsl.w	r0, r3, r0
 8000b8c:	9b04      	ldr	r3, [sp, #16]
 8000b8e:	4303      	orrs	r3, r0
 8000b90:	3401      	adds	r4, #1
 8000b92:	9304      	str	r3, [sp, #16]
 8000b94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b98:	482c      	ldr	r0, [pc, #176]	; (8000c4c <_vfiprintf_r+0x250>)
 8000b9a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000b9e:	2206      	movs	r2, #6
 8000ba0:	f7ff fb36 	bl	8000210 <memchr>
 8000ba4:	2800      	cmp	r0, #0
 8000ba6:	d03f      	beq.n	8000c28 <_vfiprintf_r+0x22c>
 8000ba8:	4b29      	ldr	r3, [pc, #164]	; (8000c50 <_vfiprintf_r+0x254>)
 8000baa:	bb1b      	cbnz	r3, 8000bf4 <_vfiprintf_r+0x1f8>
 8000bac:	9b03      	ldr	r3, [sp, #12]
 8000bae:	3307      	adds	r3, #7
 8000bb0:	f023 0307 	bic.w	r3, r3, #7
 8000bb4:	3308      	adds	r3, #8
 8000bb6:	9303      	str	r3, [sp, #12]
 8000bb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000bba:	443b      	add	r3, r7
 8000bbc:	9309      	str	r3, [sp, #36]	; 0x24
 8000bbe:	e767      	b.n	8000a90 <_vfiprintf_r+0x94>
 8000bc0:	fb0c 3202 	mla	r2, ip, r2, r3
 8000bc4:	460c      	mov	r4, r1
 8000bc6:	2001      	movs	r0, #1
 8000bc8:	e7a5      	b.n	8000b16 <_vfiprintf_r+0x11a>
 8000bca:	2300      	movs	r3, #0
 8000bcc:	3401      	adds	r4, #1
 8000bce:	9305      	str	r3, [sp, #20]
 8000bd0:	4619      	mov	r1, r3
 8000bd2:	f04f 0c0a 	mov.w	ip, #10
 8000bd6:	4620      	mov	r0, r4
 8000bd8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000bdc:	3a30      	subs	r2, #48	; 0x30
 8000bde:	2a09      	cmp	r2, #9
 8000be0:	d903      	bls.n	8000bea <_vfiprintf_r+0x1ee>
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	d0c5      	beq.n	8000b72 <_vfiprintf_r+0x176>
 8000be6:	9105      	str	r1, [sp, #20]
 8000be8:	e7c3      	b.n	8000b72 <_vfiprintf_r+0x176>
 8000bea:	fb0c 2101 	mla	r1, ip, r1, r2
 8000bee:	4604      	mov	r4, r0
 8000bf0:	2301      	movs	r3, #1
 8000bf2:	e7f0      	b.n	8000bd6 <_vfiprintf_r+0x1da>
 8000bf4:	ab03      	add	r3, sp, #12
 8000bf6:	9300      	str	r3, [sp, #0]
 8000bf8:	462a      	mov	r2, r5
 8000bfa:	4b16      	ldr	r3, [pc, #88]	; (8000c54 <_vfiprintf_r+0x258>)
 8000bfc:	a904      	add	r1, sp, #16
 8000bfe:	4630      	mov	r0, r6
 8000c00:	f3af 8000 	nop.w
 8000c04:	4607      	mov	r7, r0
 8000c06:	1c78      	adds	r0, r7, #1
 8000c08:	d1d6      	bne.n	8000bb8 <_vfiprintf_r+0x1bc>
 8000c0a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000c0c:	07d9      	lsls	r1, r3, #31
 8000c0e:	d405      	bmi.n	8000c1c <_vfiprintf_r+0x220>
 8000c10:	89ab      	ldrh	r3, [r5, #12]
 8000c12:	059a      	lsls	r2, r3, #22
 8000c14:	d402      	bmi.n	8000c1c <_vfiprintf_r+0x220>
 8000c16:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000c18:	f7ff fe6b 	bl	80008f2 <__retarget_lock_release_recursive>
 8000c1c:	89ab      	ldrh	r3, [r5, #12]
 8000c1e:	065b      	lsls	r3, r3, #25
 8000c20:	f53f af12 	bmi.w	8000a48 <_vfiprintf_r+0x4c>
 8000c24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000c26:	e711      	b.n	8000a4c <_vfiprintf_r+0x50>
 8000c28:	ab03      	add	r3, sp, #12
 8000c2a:	9300      	str	r3, [sp, #0]
 8000c2c:	462a      	mov	r2, r5
 8000c2e:	4b09      	ldr	r3, [pc, #36]	; (8000c54 <_vfiprintf_r+0x258>)
 8000c30:	a904      	add	r1, sp, #16
 8000c32:	4630      	mov	r0, r6
 8000c34:	f000 f880 	bl	8000d38 <_printf_i>
 8000c38:	e7e4      	b.n	8000c04 <_vfiprintf_r+0x208>
 8000c3a:	bf00      	nop
 8000c3c:	080015bc 	.word	0x080015bc
 8000c40:	080015dc 	.word	0x080015dc
 8000c44:	0800159c 	.word	0x0800159c
 8000c48:	080015fc 	.word	0x080015fc
 8000c4c:	08001606 	.word	0x08001606
 8000c50:	00000000 	.word	0x00000000
 8000c54:	080009d7 	.word	0x080009d7
 8000c58:	08001602 	.word	0x08001602

08000c5c <_printf_common>:
 8000c5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c60:	4616      	mov	r6, r2
 8000c62:	4699      	mov	r9, r3
 8000c64:	688a      	ldr	r2, [r1, #8]
 8000c66:	690b      	ldr	r3, [r1, #16]
 8000c68:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000c6c:	4293      	cmp	r3, r2
 8000c6e:	bfb8      	it	lt
 8000c70:	4613      	movlt	r3, r2
 8000c72:	6033      	str	r3, [r6, #0]
 8000c74:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000c78:	4607      	mov	r7, r0
 8000c7a:	460c      	mov	r4, r1
 8000c7c:	b10a      	cbz	r2, 8000c82 <_printf_common+0x26>
 8000c7e:	3301      	adds	r3, #1
 8000c80:	6033      	str	r3, [r6, #0]
 8000c82:	6823      	ldr	r3, [r4, #0]
 8000c84:	0699      	lsls	r1, r3, #26
 8000c86:	bf42      	ittt	mi
 8000c88:	6833      	ldrmi	r3, [r6, #0]
 8000c8a:	3302      	addmi	r3, #2
 8000c8c:	6033      	strmi	r3, [r6, #0]
 8000c8e:	6825      	ldr	r5, [r4, #0]
 8000c90:	f015 0506 	ands.w	r5, r5, #6
 8000c94:	d106      	bne.n	8000ca4 <_printf_common+0x48>
 8000c96:	f104 0a19 	add.w	sl, r4, #25
 8000c9a:	68e3      	ldr	r3, [r4, #12]
 8000c9c:	6832      	ldr	r2, [r6, #0]
 8000c9e:	1a9b      	subs	r3, r3, r2
 8000ca0:	42ab      	cmp	r3, r5
 8000ca2:	dc26      	bgt.n	8000cf2 <_printf_common+0x96>
 8000ca4:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8000ca8:	1e13      	subs	r3, r2, #0
 8000caa:	6822      	ldr	r2, [r4, #0]
 8000cac:	bf18      	it	ne
 8000cae:	2301      	movne	r3, #1
 8000cb0:	0692      	lsls	r2, r2, #26
 8000cb2:	d42b      	bmi.n	8000d0c <_printf_common+0xb0>
 8000cb4:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000cb8:	4649      	mov	r1, r9
 8000cba:	4638      	mov	r0, r7
 8000cbc:	47c0      	blx	r8
 8000cbe:	3001      	adds	r0, #1
 8000cc0:	d01e      	beq.n	8000d00 <_printf_common+0xa4>
 8000cc2:	6823      	ldr	r3, [r4, #0]
 8000cc4:	68e5      	ldr	r5, [r4, #12]
 8000cc6:	6832      	ldr	r2, [r6, #0]
 8000cc8:	f003 0306 	and.w	r3, r3, #6
 8000ccc:	2b04      	cmp	r3, #4
 8000cce:	bf08      	it	eq
 8000cd0:	1aad      	subeq	r5, r5, r2
 8000cd2:	68a3      	ldr	r3, [r4, #8]
 8000cd4:	6922      	ldr	r2, [r4, #16]
 8000cd6:	bf0c      	ite	eq
 8000cd8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000cdc:	2500      	movne	r5, #0
 8000cde:	4293      	cmp	r3, r2
 8000ce0:	bfc4      	itt	gt
 8000ce2:	1a9b      	subgt	r3, r3, r2
 8000ce4:	18ed      	addgt	r5, r5, r3
 8000ce6:	2600      	movs	r6, #0
 8000ce8:	341a      	adds	r4, #26
 8000cea:	42b5      	cmp	r5, r6
 8000cec:	d11a      	bne.n	8000d24 <_printf_common+0xc8>
 8000cee:	2000      	movs	r0, #0
 8000cf0:	e008      	b.n	8000d04 <_printf_common+0xa8>
 8000cf2:	2301      	movs	r3, #1
 8000cf4:	4652      	mov	r2, sl
 8000cf6:	4649      	mov	r1, r9
 8000cf8:	4638      	mov	r0, r7
 8000cfa:	47c0      	blx	r8
 8000cfc:	3001      	adds	r0, #1
 8000cfe:	d103      	bne.n	8000d08 <_printf_common+0xac>
 8000d00:	f04f 30ff 	mov.w	r0, #4294967295
 8000d04:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d08:	3501      	adds	r5, #1
 8000d0a:	e7c6      	b.n	8000c9a <_printf_common+0x3e>
 8000d0c:	18e1      	adds	r1, r4, r3
 8000d0e:	1c5a      	adds	r2, r3, #1
 8000d10:	2030      	movs	r0, #48	; 0x30
 8000d12:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8000d16:	4422      	add	r2, r4
 8000d18:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8000d1c:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8000d20:	3302      	adds	r3, #2
 8000d22:	e7c7      	b.n	8000cb4 <_printf_common+0x58>
 8000d24:	2301      	movs	r3, #1
 8000d26:	4622      	mov	r2, r4
 8000d28:	4649      	mov	r1, r9
 8000d2a:	4638      	mov	r0, r7
 8000d2c:	47c0      	blx	r8
 8000d2e:	3001      	adds	r0, #1
 8000d30:	d0e6      	beq.n	8000d00 <_printf_common+0xa4>
 8000d32:	3601      	adds	r6, #1
 8000d34:	e7d9      	b.n	8000cea <_printf_common+0x8e>
	...

08000d38 <_printf_i>:
 8000d38:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000d3c:	460c      	mov	r4, r1
 8000d3e:	4691      	mov	r9, r2
 8000d40:	7e27      	ldrb	r7, [r4, #24]
 8000d42:	990c      	ldr	r1, [sp, #48]	; 0x30
 8000d44:	2f78      	cmp	r7, #120	; 0x78
 8000d46:	4680      	mov	r8, r0
 8000d48:	469a      	mov	sl, r3
 8000d4a:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8000d4e:	d807      	bhi.n	8000d60 <_printf_i+0x28>
 8000d50:	2f62      	cmp	r7, #98	; 0x62
 8000d52:	d80a      	bhi.n	8000d6a <_printf_i+0x32>
 8000d54:	2f00      	cmp	r7, #0
 8000d56:	f000 80d8 	beq.w	8000f0a <_printf_i+0x1d2>
 8000d5a:	2f58      	cmp	r7, #88	; 0x58
 8000d5c:	f000 80a3 	beq.w	8000ea6 <_printf_i+0x16e>
 8000d60:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000d64:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8000d68:	e03a      	b.n	8000de0 <_printf_i+0xa8>
 8000d6a:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8000d6e:	2b15      	cmp	r3, #21
 8000d70:	d8f6      	bhi.n	8000d60 <_printf_i+0x28>
 8000d72:	a001      	add	r0, pc, #4	; (adr r0, 8000d78 <_printf_i+0x40>)
 8000d74:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8000d78:	08000dd1 	.word	0x08000dd1
 8000d7c:	08000de5 	.word	0x08000de5
 8000d80:	08000d61 	.word	0x08000d61
 8000d84:	08000d61 	.word	0x08000d61
 8000d88:	08000d61 	.word	0x08000d61
 8000d8c:	08000d61 	.word	0x08000d61
 8000d90:	08000de5 	.word	0x08000de5
 8000d94:	08000d61 	.word	0x08000d61
 8000d98:	08000d61 	.word	0x08000d61
 8000d9c:	08000d61 	.word	0x08000d61
 8000da0:	08000d61 	.word	0x08000d61
 8000da4:	08000ef1 	.word	0x08000ef1
 8000da8:	08000e15 	.word	0x08000e15
 8000dac:	08000ed3 	.word	0x08000ed3
 8000db0:	08000d61 	.word	0x08000d61
 8000db4:	08000d61 	.word	0x08000d61
 8000db8:	08000f13 	.word	0x08000f13
 8000dbc:	08000d61 	.word	0x08000d61
 8000dc0:	08000e15 	.word	0x08000e15
 8000dc4:	08000d61 	.word	0x08000d61
 8000dc8:	08000d61 	.word	0x08000d61
 8000dcc:	08000edb 	.word	0x08000edb
 8000dd0:	680b      	ldr	r3, [r1, #0]
 8000dd2:	1d1a      	adds	r2, r3, #4
 8000dd4:	681b      	ldr	r3, [r3, #0]
 8000dd6:	600a      	str	r2, [r1, #0]
 8000dd8:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8000ddc:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8000de0:	2301      	movs	r3, #1
 8000de2:	e0a3      	b.n	8000f2c <_printf_i+0x1f4>
 8000de4:	6825      	ldr	r5, [r4, #0]
 8000de6:	6808      	ldr	r0, [r1, #0]
 8000de8:	062e      	lsls	r6, r5, #24
 8000dea:	f100 0304 	add.w	r3, r0, #4
 8000dee:	d50a      	bpl.n	8000e06 <_printf_i+0xce>
 8000df0:	6805      	ldr	r5, [r0, #0]
 8000df2:	600b      	str	r3, [r1, #0]
 8000df4:	2d00      	cmp	r5, #0
 8000df6:	da03      	bge.n	8000e00 <_printf_i+0xc8>
 8000df8:	232d      	movs	r3, #45	; 0x2d
 8000dfa:	426d      	negs	r5, r5
 8000dfc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000e00:	485e      	ldr	r0, [pc, #376]	; (8000f7c <_printf_i+0x244>)
 8000e02:	230a      	movs	r3, #10
 8000e04:	e019      	b.n	8000e3a <_printf_i+0x102>
 8000e06:	f015 0f40 	tst.w	r5, #64	; 0x40
 8000e0a:	6805      	ldr	r5, [r0, #0]
 8000e0c:	600b      	str	r3, [r1, #0]
 8000e0e:	bf18      	it	ne
 8000e10:	b22d      	sxthne	r5, r5
 8000e12:	e7ef      	b.n	8000df4 <_printf_i+0xbc>
 8000e14:	680b      	ldr	r3, [r1, #0]
 8000e16:	6825      	ldr	r5, [r4, #0]
 8000e18:	1d18      	adds	r0, r3, #4
 8000e1a:	6008      	str	r0, [r1, #0]
 8000e1c:	0628      	lsls	r0, r5, #24
 8000e1e:	d501      	bpl.n	8000e24 <_printf_i+0xec>
 8000e20:	681d      	ldr	r5, [r3, #0]
 8000e22:	e002      	b.n	8000e2a <_printf_i+0xf2>
 8000e24:	0669      	lsls	r1, r5, #25
 8000e26:	d5fb      	bpl.n	8000e20 <_printf_i+0xe8>
 8000e28:	881d      	ldrh	r5, [r3, #0]
 8000e2a:	4854      	ldr	r0, [pc, #336]	; (8000f7c <_printf_i+0x244>)
 8000e2c:	2f6f      	cmp	r7, #111	; 0x6f
 8000e2e:	bf0c      	ite	eq
 8000e30:	2308      	moveq	r3, #8
 8000e32:	230a      	movne	r3, #10
 8000e34:	2100      	movs	r1, #0
 8000e36:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8000e3a:	6866      	ldr	r6, [r4, #4]
 8000e3c:	60a6      	str	r6, [r4, #8]
 8000e3e:	2e00      	cmp	r6, #0
 8000e40:	bfa2      	ittt	ge
 8000e42:	6821      	ldrge	r1, [r4, #0]
 8000e44:	f021 0104 	bicge.w	r1, r1, #4
 8000e48:	6021      	strge	r1, [r4, #0]
 8000e4a:	b90d      	cbnz	r5, 8000e50 <_printf_i+0x118>
 8000e4c:	2e00      	cmp	r6, #0
 8000e4e:	d04d      	beq.n	8000eec <_printf_i+0x1b4>
 8000e50:	4616      	mov	r6, r2
 8000e52:	fbb5 f1f3 	udiv	r1, r5, r3
 8000e56:	fb03 5711 	mls	r7, r3, r1, r5
 8000e5a:	5dc7      	ldrb	r7, [r0, r7]
 8000e5c:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000e60:	462f      	mov	r7, r5
 8000e62:	42bb      	cmp	r3, r7
 8000e64:	460d      	mov	r5, r1
 8000e66:	d9f4      	bls.n	8000e52 <_printf_i+0x11a>
 8000e68:	2b08      	cmp	r3, #8
 8000e6a:	d10b      	bne.n	8000e84 <_printf_i+0x14c>
 8000e6c:	6823      	ldr	r3, [r4, #0]
 8000e6e:	07df      	lsls	r7, r3, #31
 8000e70:	d508      	bpl.n	8000e84 <_printf_i+0x14c>
 8000e72:	6923      	ldr	r3, [r4, #16]
 8000e74:	6861      	ldr	r1, [r4, #4]
 8000e76:	4299      	cmp	r1, r3
 8000e78:	bfde      	ittt	le
 8000e7a:	2330      	movle	r3, #48	; 0x30
 8000e7c:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000e80:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000e84:	1b92      	subs	r2, r2, r6
 8000e86:	6122      	str	r2, [r4, #16]
 8000e88:	f8cd a000 	str.w	sl, [sp]
 8000e8c:	464b      	mov	r3, r9
 8000e8e:	aa03      	add	r2, sp, #12
 8000e90:	4621      	mov	r1, r4
 8000e92:	4640      	mov	r0, r8
 8000e94:	f7ff fee2 	bl	8000c5c <_printf_common>
 8000e98:	3001      	adds	r0, #1
 8000e9a:	d14c      	bne.n	8000f36 <_printf_i+0x1fe>
 8000e9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000ea0:	b004      	add	sp, #16
 8000ea2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000ea6:	4835      	ldr	r0, [pc, #212]	; (8000f7c <_printf_i+0x244>)
 8000ea8:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8000eac:	6823      	ldr	r3, [r4, #0]
 8000eae:	680e      	ldr	r6, [r1, #0]
 8000eb0:	061f      	lsls	r7, r3, #24
 8000eb2:	f856 5b04 	ldr.w	r5, [r6], #4
 8000eb6:	600e      	str	r6, [r1, #0]
 8000eb8:	d514      	bpl.n	8000ee4 <_printf_i+0x1ac>
 8000eba:	07d9      	lsls	r1, r3, #31
 8000ebc:	bf44      	itt	mi
 8000ebe:	f043 0320 	orrmi.w	r3, r3, #32
 8000ec2:	6023      	strmi	r3, [r4, #0]
 8000ec4:	b91d      	cbnz	r5, 8000ece <_printf_i+0x196>
 8000ec6:	6823      	ldr	r3, [r4, #0]
 8000ec8:	f023 0320 	bic.w	r3, r3, #32
 8000ecc:	6023      	str	r3, [r4, #0]
 8000ece:	2310      	movs	r3, #16
 8000ed0:	e7b0      	b.n	8000e34 <_printf_i+0xfc>
 8000ed2:	6823      	ldr	r3, [r4, #0]
 8000ed4:	f043 0320 	orr.w	r3, r3, #32
 8000ed8:	6023      	str	r3, [r4, #0]
 8000eda:	2378      	movs	r3, #120	; 0x78
 8000edc:	4828      	ldr	r0, [pc, #160]	; (8000f80 <_printf_i+0x248>)
 8000ede:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8000ee2:	e7e3      	b.n	8000eac <_printf_i+0x174>
 8000ee4:	065e      	lsls	r6, r3, #25
 8000ee6:	bf48      	it	mi
 8000ee8:	b2ad      	uxthmi	r5, r5
 8000eea:	e7e6      	b.n	8000eba <_printf_i+0x182>
 8000eec:	4616      	mov	r6, r2
 8000eee:	e7bb      	b.n	8000e68 <_printf_i+0x130>
 8000ef0:	680b      	ldr	r3, [r1, #0]
 8000ef2:	6826      	ldr	r6, [r4, #0]
 8000ef4:	6960      	ldr	r0, [r4, #20]
 8000ef6:	1d1d      	adds	r5, r3, #4
 8000ef8:	600d      	str	r5, [r1, #0]
 8000efa:	0635      	lsls	r5, r6, #24
 8000efc:	681b      	ldr	r3, [r3, #0]
 8000efe:	d501      	bpl.n	8000f04 <_printf_i+0x1cc>
 8000f00:	6018      	str	r0, [r3, #0]
 8000f02:	e002      	b.n	8000f0a <_printf_i+0x1d2>
 8000f04:	0671      	lsls	r1, r6, #25
 8000f06:	d5fb      	bpl.n	8000f00 <_printf_i+0x1c8>
 8000f08:	8018      	strh	r0, [r3, #0]
 8000f0a:	2300      	movs	r3, #0
 8000f0c:	6123      	str	r3, [r4, #16]
 8000f0e:	4616      	mov	r6, r2
 8000f10:	e7ba      	b.n	8000e88 <_printf_i+0x150>
 8000f12:	680b      	ldr	r3, [r1, #0]
 8000f14:	1d1a      	adds	r2, r3, #4
 8000f16:	600a      	str	r2, [r1, #0]
 8000f18:	681e      	ldr	r6, [r3, #0]
 8000f1a:	6862      	ldr	r2, [r4, #4]
 8000f1c:	2100      	movs	r1, #0
 8000f1e:	4630      	mov	r0, r6
 8000f20:	f7ff f976 	bl	8000210 <memchr>
 8000f24:	b108      	cbz	r0, 8000f2a <_printf_i+0x1f2>
 8000f26:	1b80      	subs	r0, r0, r6
 8000f28:	6060      	str	r0, [r4, #4]
 8000f2a:	6863      	ldr	r3, [r4, #4]
 8000f2c:	6123      	str	r3, [r4, #16]
 8000f2e:	2300      	movs	r3, #0
 8000f30:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8000f34:	e7a8      	b.n	8000e88 <_printf_i+0x150>
 8000f36:	6923      	ldr	r3, [r4, #16]
 8000f38:	4632      	mov	r2, r6
 8000f3a:	4649      	mov	r1, r9
 8000f3c:	4640      	mov	r0, r8
 8000f3e:	47d0      	blx	sl
 8000f40:	3001      	adds	r0, #1
 8000f42:	d0ab      	beq.n	8000e9c <_printf_i+0x164>
 8000f44:	6823      	ldr	r3, [r4, #0]
 8000f46:	079b      	lsls	r3, r3, #30
 8000f48:	d413      	bmi.n	8000f72 <_printf_i+0x23a>
 8000f4a:	68e0      	ldr	r0, [r4, #12]
 8000f4c:	9b03      	ldr	r3, [sp, #12]
 8000f4e:	4298      	cmp	r0, r3
 8000f50:	bfb8      	it	lt
 8000f52:	4618      	movlt	r0, r3
 8000f54:	e7a4      	b.n	8000ea0 <_printf_i+0x168>
 8000f56:	2301      	movs	r3, #1
 8000f58:	4632      	mov	r2, r6
 8000f5a:	4649      	mov	r1, r9
 8000f5c:	4640      	mov	r0, r8
 8000f5e:	47d0      	blx	sl
 8000f60:	3001      	adds	r0, #1
 8000f62:	d09b      	beq.n	8000e9c <_printf_i+0x164>
 8000f64:	3501      	adds	r5, #1
 8000f66:	68e3      	ldr	r3, [r4, #12]
 8000f68:	9903      	ldr	r1, [sp, #12]
 8000f6a:	1a5b      	subs	r3, r3, r1
 8000f6c:	42ab      	cmp	r3, r5
 8000f6e:	dcf2      	bgt.n	8000f56 <_printf_i+0x21e>
 8000f70:	e7eb      	b.n	8000f4a <_printf_i+0x212>
 8000f72:	2500      	movs	r5, #0
 8000f74:	f104 0619 	add.w	r6, r4, #25
 8000f78:	e7f5      	b.n	8000f66 <_printf_i+0x22e>
 8000f7a:	bf00      	nop
 8000f7c:	0800160d 	.word	0x0800160d
 8000f80:	0800161e 	.word	0x0800161e

08000f84 <_sbrk_r>:
 8000f84:	b538      	push	{r3, r4, r5, lr}
 8000f86:	4d06      	ldr	r5, [pc, #24]	; (8000fa0 <_sbrk_r+0x1c>)
 8000f88:	2300      	movs	r3, #0
 8000f8a:	4604      	mov	r4, r0
 8000f8c:	4608      	mov	r0, r1
 8000f8e:	602b      	str	r3, [r5, #0]
 8000f90:	f7ff fa7e 	bl	8000490 <_sbrk>
 8000f94:	1c43      	adds	r3, r0, #1
 8000f96:	d102      	bne.n	8000f9e <_sbrk_r+0x1a>
 8000f98:	682b      	ldr	r3, [r5, #0]
 8000f9a:	b103      	cbz	r3, 8000f9e <_sbrk_r+0x1a>
 8000f9c:	6023      	str	r3, [r4, #0]
 8000f9e:	bd38      	pop	{r3, r4, r5, pc}
 8000fa0:	200000a0 	.word	0x200000a0

08000fa4 <__sread>:
 8000fa4:	b510      	push	{r4, lr}
 8000fa6:	460c      	mov	r4, r1
 8000fa8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fac:	f000 fab4 	bl	8001518 <_read_r>
 8000fb0:	2800      	cmp	r0, #0
 8000fb2:	bfab      	itete	ge
 8000fb4:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000fb6:	89a3      	ldrhlt	r3, [r4, #12]
 8000fb8:	181b      	addge	r3, r3, r0
 8000fba:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 8000fbe:	bfac      	ite	ge
 8000fc0:	6563      	strge	r3, [r4, #84]	; 0x54
 8000fc2:	81a3      	strhlt	r3, [r4, #12]
 8000fc4:	bd10      	pop	{r4, pc}

08000fc6 <__swrite>:
 8000fc6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000fca:	461f      	mov	r7, r3
 8000fcc:	898b      	ldrh	r3, [r1, #12]
 8000fce:	05db      	lsls	r3, r3, #23
 8000fd0:	4605      	mov	r5, r0
 8000fd2:	460c      	mov	r4, r1
 8000fd4:	4616      	mov	r6, r2
 8000fd6:	d505      	bpl.n	8000fe4 <__swrite+0x1e>
 8000fd8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000fdc:	2302      	movs	r3, #2
 8000fde:	2200      	movs	r2, #0
 8000fe0:	f000 f9c8 	bl	8001374 <_lseek_r>
 8000fe4:	89a3      	ldrh	r3, [r4, #12]
 8000fe6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000fea:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8000fee:	81a3      	strh	r3, [r4, #12]
 8000ff0:	4632      	mov	r2, r6
 8000ff2:	463b      	mov	r3, r7
 8000ff4:	4628      	mov	r0, r5
 8000ff6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000ffa:	f000 b869 	b.w	80010d0 <_write_r>

08000ffe <__sseek>:
 8000ffe:	b510      	push	{r4, lr}
 8001000:	460c      	mov	r4, r1
 8001002:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001006:	f000 f9b5 	bl	8001374 <_lseek_r>
 800100a:	1c43      	adds	r3, r0, #1
 800100c:	89a3      	ldrh	r3, [r4, #12]
 800100e:	bf15      	itete	ne
 8001010:	6560      	strne	r0, [r4, #84]	; 0x54
 8001012:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001016:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800101a:	81a3      	strheq	r3, [r4, #12]
 800101c:	bf18      	it	ne
 800101e:	81a3      	strhne	r3, [r4, #12]
 8001020:	bd10      	pop	{r4, pc}

08001022 <__sclose>:
 8001022:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001026:	f000 b8d3 	b.w	80011d0 <_close_r>
	...

0800102c <__swbuf_r>:
 800102c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800102e:	460e      	mov	r6, r1
 8001030:	4614      	mov	r4, r2
 8001032:	4605      	mov	r5, r0
 8001034:	b118      	cbz	r0, 800103e <__swbuf_r+0x12>
 8001036:	6983      	ldr	r3, [r0, #24]
 8001038:	b90b      	cbnz	r3, 800103e <__swbuf_r+0x12>
 800103a:	f7ff fbbb 	bl	80007b4 <__sinit>
 800103e:	4b21      	ldr	r3, [pc, #132]	; (80010c4 <__swbuf_r+0x98>)
 8001040:	429c      	cmp	r4, r3
 8001042:	d12b      	bne.n	800109c <__swbuf_r+0x70>
 8001044:	686c      	ldr	r4, [r5, #4]
 8001046:	69a3      	ldr	r3, [r4, #24]
 8001048:	60a3      	str	r3, [r4, #8]
 800104a:	89a3      	ldrh	r3, [r4, #12]
 800104c:	071a      	lsls	r2, r3, #28
 800104e:	d52f      	bpl.n	80010b0 <__swbuf_r+0x84>
 8001050:	6923      	ldr	r3, [r4, #16]
 8001052:	b36b      	cbz	r3, 80010b0 <__swbuf_r+0x84>
 8001054:	6923      	ldr	r3, [r4, #16]
 8001056:	6820      	ldr	r0, [r4, #0]
 8001058:	1ac0      	subs	r0, r0, r3
 800105a:	6963      	ldr	r3, [r4, #20]
 800105c:	b2f6      	uxtb	r6, r6
 800105e:	4283      	cmp	r3, r0
 8001060:	4637      	mov	r7, r6
 8001062:	dc04      	bgt.n	800106e <__swbuf_r+0x42>
 8001064:	4621      	mov	r1, r4
 8001066:	4628      	mov	r0, r5
 8001068:	f000 f948 	bl	80012fc <_fflush_r>
 800106c:	bb30      	cbnz	r0, 80010bc <__swbuf_r+0x90>
 800106e:	68a3      	ldr	r3, [r4, #8]
 8001070:	3b01      	subs	r3, #1
 8001072:	60a3      	str	r3, [r4, #8]
 8001074:	6823      	ldr	r3, [r4, #0]
 8001076:	1c5a      	adds	r2, r3, #1
 8001078:	6022      	str	r2, [r4, #0]
 800107a:	701e      	strb	r6, [r3, #0]
 800107c:	6963      	ldr	r3, [r4, #20]
 800107e:	3001      	adds	r0, #1
 8001080:	4283      	cmp	r3, r0
 8001082:	d004      	beq.n	800108e <__swbuf_r+0x62>
 8001084:	89a3      	ldrh	r3, [r4, #12]
 8001086:	07db      	lsls	r3, r3, #31
 8001088:	d506      	bpl.n	8001098 <__swbuf_r+0x6c>
 800108a:	2e0a      	cmp	r6, #10
 800108c:	d104      	bne.n	8001098 <__swbuf_r+0x6c>
 800108e:	4621      	mov	r1, r4
 8001090:	4628      	mov	r0, r5
 8001092:	f000 f933 	bl	80012fc <_fflush_r>
 8001096:	b988      	cbnz	r0, 80010bc <__swbuf_r+0x90>
 8001098:	4638      	mov	r0, r7
 800109a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800109c:	4b0a      	ldr	r3, [pc, #40]	; (80010c8 <__swbuf_r+0x9c>)
 800109e:	429c      	cmp	r4, r3
 80010a0:	d101      	bne.n	80010a6 <__swbuf_r+0x7a>
 80010a2:	68ac      	ldr	r4, [r5, #8]
 80010a4:	e7cf      	b.n	8001046 <__swbuf_r+0x1a>
 80010a6:	4b09      	ldr	r3, [pc, #36]	; (80010cc <__swbuf_r+0xa0>)
 80010a8:	429c      	cmp	r4, r3
 80010aa:	bf08      	it	eq
 80010ac:	68ec      	ldreq	r4, [r5, #12]
 80010ae:	e7ca      	b.n	8001046 <__swbuf_r+0x1a>
 80010b0:	4621      	mov	r1, r4
 80010b2:	4628      	mov	r0, r5
 80010b4:	f000 f81e 	bl	80010f4 <__swsetup_r>
 80010b8:	2800      	cmp	r0, #0
 80010ba:	d0cb      	beq.n	8001054 <__swbuf_r+0x28>
 80010bc:	f04f 37ff 	mov.w	r7, #4294967295
 80010c0:	e7ea      	b.n	8001098 <__swbuf_r+0x6c>
 80010c2:	bf00      	nop
 80010c4:	080015bc 	.word	0x080015bc
 80010c8:	080015dc 	.word	0x080015dc
 80010cc:	0800159c 	.word	0x0800159c

080010d0 <_write_r>:
 80010d0:	b538      	push	{r3, r4, r5, lr}
 80010d2:	4d07      	ldr	r5, [pc, #28]	; (80010f0 <_write_r+0x20>)
 80010d4:	4604      	mov	r4, r0
 80010d6:	4608      	mov	r0, r1
 80010d8:	4611      	mov	r1, r2
 80010da:	2200      	movs	r2, #0
 80010dc:	602a      	str	r2, [r5, #0]
 80010de:	461a      	mov	r2, r3
 80010e0:	f7ff f985 	bl	80003ee <_write>
 80010e4:	1c43      	adds	r3, r0, #1
 80010e6:	d102      	bne.n	80010ee <_write_r+0x1e>
 80010e8:	682b      	ldr	r3, [r5, #0]
 80010ea:	b103      	cbz	r3, 80010ee <_write_r+0x1e>
 80010ec:	6023      	str	r3, [r4, #0]
 80010ee:	bd38      	pop	{r3, r4, r5, pc}
 80010f0:	200000a0 	.word	0x200000a0

080010f4 <__swsetup_r>:
 80010f4:	4b32      	ldr	r3, [pc, #200]	; (80011c0 <__swsetup_r+0xcc>)
 80010f6:	b570      	push	{r4, r5, r6, lr}
 80010f8:	681d      	ldr	r5, [r3, #0]
 80010fa:	4606      	mov	r6, r0
 80010fc:	460c      	mov	r4, r1
 80010fe:	b125      	cbz	r5, 800110a <__swsetup_r+0x16>
 8001100:	69ab      	ldr	r3, [r5, #24]
 8001102:	b913      	cbnz	r3, 800110a <__swsetup_r+0x16>
 8001104:	4628      	mov	r0, r5
 8001106:	f7ff fb55 	bl	80007b4 <__sinit>
 800110a:	4b2e      	ldr	r3, [pc, #184]	; (80011c4 <__swsetup_r+0xd0>)
 800110c:	429c      	cmp	r4, r3
 800110e:	d10f      	bne.n	8001130 <__swsetup_r+0x3c>
 8001110:	686c      	ldr	r4, [r5, #4]
 8001112:	89a3      	ldrh	r3, [r4, #12]
 8001114:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001118:	0719      	lsls	r1, r3, #28
 800111a:	d42c      	bmi.n	8001176 <__swsetup_r+0x82>
 800111c:	06dd      	lsls	r5, r3, #27
 800111e:	d411      	bmi.n	8001144 <__swsetup_r+0x50>
 8001120:	2309      	movs	r3, #9
 8001122:	6033      	str	r3, [r6, #0]
 8001124:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8001128:	81a3      	strh	r3, [r4, #12]
 800112a:	f04f 30ff 	mov.w	r0, #4294967295
 800112e:	e03e      	b.n	80011ae <__swsetup_r+0xba>
 8001130:	4b25      	ldr	r3, [pc, #148]	; (80011c8 <__swsetup_r+0xd4>)
 8001132:	429c      	cmp	r4, r3
 8001134:	d101      	bne.n	800113a <__swsetup_r+0x46>
 8001136:	68ac      	ldr	r4, [r5, #8]
 8001138:	e7eb      	b.n	8001112 <__swsetup_r+0x1e>
 800113a:	4b24      	ldr	r3, [pc, #144]	; (80011cc <__swsetup_r+0xd8>)
 800113c:	429c      	cmp	r4, r3
 800113e:	bf08      	it	eq
 8001140:	68ec      	ldreq	r4, [r5, #12]
 8001142:	e7e6      	b.n	8001112 <__swsetup_r+0x1e>
 8001144:	0758      	lsls	r0, r3, #29
 8001146:	d512      	bpl.n	800116e <__swsetup_r+0x7a>
 8001148:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800114a:	b141      	cbz	r1, 800115e <__swsetup_r+0x6a>
 800114c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001150:	4299      	cmp	r1, r3
 8001152:	d002      	beq.n	800115a <__swsetup_r+0x66>
 8001154:	4630      	mov	r0, r6
 8001156:	f000 f98f 	bl	8001478 <_free_r>
 800115a:	2300      	movs	r3, #0
 800115c:	6363      	str	r3, [r4, #52]	; 0x34
 800115e:	89a3      	ldrh	r3, [r4, #12]
 8001160:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8001164:	81a3      	strh	r3, [r4, #12]
 8001166:	2300      	movs	r3, #0
 8001168:	6063      	str	r3, [r4, #4]
 800116a:	6923      	ldr	r3, [r4, #16]
 800116c:	6023      	str	r3, [r4, #0]
 800116e:	89a3      	ldrh	r3, [r4, #12]
 8001170:	f043 0308 	orr.w	r3, r3, #8
 8001174:	81a3      	strh	r3, [r4, #12]
 8001176:	6923      	ldr	r3, [r4, #16]
 8001178:	b94b      	cbnz	r3, 800118e <__swsetup_r+0x9a>
 800117a:	89a3      	ldrh	r3, [r4, #12]
 800117c:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8001180:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8001184:	d003      	beq.n	800118e <__swsetup_r+0x9a>
 8001186:	4621      	mov	r1, r4
 8001188:	4630      	mov	r0, r6
 800118a:	f000 f929 	bl	80013e0 <__smakebuf_r>
 800118e:	89a0      	ldrh	r0, [r4, #12]
 8001190:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8001194:	f010 0301 	ands.w	r3, r0, #1
 8001198:	d00a      	beq.n	80011b0 <__swsetup_r+0xbc>
 800119a:	2300      	movs	r3, #0
 800119c:	60a3      	str	r3, [r4, #8]
 800119e:	6963      	ldr	r3, [r4, #20]
 80011a0:	425b      	negs	r3, r3
 80011a2:	61a3      	str	r3, [r4, #24]
 80011a4:	6923      	ldr	r3, [r4, #16]
 80011a6:	b943      	cbnz	r3, 80011ba <__swsetup_r+0xc6>
 80011a8:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80011ac:	d1ba      	bne.n	8001124 <__swsetup_r+0x30>
 80011ae:	bd70      	pop	{r4, r5, r6, pc}
 80011b0:	0781      	lsls	r1, r0, #30
 80011b2:	bf58      	it	pl
 80011b4:	6963      	ldrpl	r3, [r4, #20]
 80011b6:	60a3      	str	r3, [r4, #8]
 80011b8:	e7f4      	b.n	80011a4 <__swsetup_r+0xb0>
 80011ba:	2000      	movs	r0, #0
 80011bc:	e7f7      	b.n	80011ae <__swsetup_r+0xba>
 80011be:	bf00      	nop
 80011c0:	20000000 	.word	0x20000000
 80011c4:	080015bc 	.word	0x080015bc
 80011c8:	080015dc 	.word	0x080015dc
 80011cc:	0800159c 	.word	0x0800159c

080011d0 <_close_r>:
 80011d0:	b538      	push	{r3, r4, r5, lr}
 80011d2:	4d06      	ldr	r5, [pc, #24]	; (80011ec <_close_r+0x1c>)
 80011d4:	2300      	movs	r3, #0
 80011d6:	4604      	mov	r4, r0
 80011d8:	4608      	mov	r0, r1
 80011da:	602b      	str	r3, [r5, #0]
 80011dc:	f7ff f923 	bl	8000426 <_close>
 80011e0:	1c43      	adds	r3, r0, #1
 80011e2:	d102      	bne.n	80011ea <_close_r+0x1a>
 80011e4:	682b      	ldr	r3, [r5, #0]
 80011e6:	b103      	cbz	r3, 80011ea <_close_r+0x1a>
 80011e8:	6023      	str	r3, [r4, #0]
 80011ea:	bd38      	pop	{r3, r4, r5, pc}
 80011ec:	200000a0 	.word	0x200000a0

080011f0 <__sflush_r>:
 80011f0:	898a      	ldrh	r2, [r1, #12]
 80011f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80011f6:	4605      	mov	r5, r0
 80011f8:	0710      	lsls	r0, r2, #28
 80011fa:	460c      	mov	r4, r1
 80011fc:	d458      	bmi.n	80012b0 <__sflush_r+0xc0>
 80011fe:	684b      	ldr	r3, [r1, #4]
 8001200:	2b00      	cmp	r3, #0
 8001202:	dc05      	bgt.n	8001210 <__sflush_r+0x20>
 8001204:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8001206:	2b00      	cmp	r3, #0
 8001208:	dc02      	bgt.n	8001210 <__sflush_r+0x20>
 800120a:	2000      	movs	r0, #0
 800120c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8001210:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8001212:	2e00      	cmp	r6, #0
 8001214:	d0f9      	beq.n	800120a <__sflush_r+0x1a>
 8001216:	2300      	movs	r3, #0
 8001218:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800121c:	682f      	ldr	r7, [r5, #0]
 800121e:	602b      	str	r3, [r5, #0]
 8001220:	d032      	beq.n	8001288 <__sflush_r+0x98>
 8001222:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001224:	89a3      	ldrh	r3, [r4, #12]
 8001226:	075a      	lsls	r2, r3, #29
 8001228:	d505      	bpl.n	8001236 <__sflush_r+0x46>
 800122a:	6863      	ldr	r3, [r4, #4]
 800122c:	1ac0      	subs	r0, r0, r3
 800122e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8001230:	b10b      	cbz	r3, 8001236 <__sflush_r+0x46>
 8001232:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001234:	1ac0      	subs	r0, r0, r3
 8001236:	2300      	movs	r3, #0
 8001238:	4602      	mov	r2, r0
 800123a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800123c:	6a21      	ldr	r1, [r4, #32]
 800123e:	4628      	mov	r0, r5
 8001240:	47b0      	blx	r6
 8001242:	1c43      	adds	r3, r0, #1
 8001244:	89a3      	ldrh	r3, [r4, #12]
 8001246:	d106      	bne.n	8001256 <__sflush_r+0x66>
 8001248:	6829      	ldr	r1, [r5, #0]
 800124a:	291d      	cmp	r1, #29
 800124c:	d82c      	bhi.n	80012a8 <__sflush_r+0xb8>
 800124e:	4a2a      	ldr	r2, [pc, #168]	; (80012f8 <__sflush_r+0x108>)
 8001250:	40ca      	lsrs	r2, r1
 8001252:	07d6      	lsls	r6, r2, #31
 8001254:	d528      	bpl.n	80012a8 <__sflush_r+0xb8>
 8001256:	2200      	movs	r2, #0
 8001258:	6062      	str	r2, [r4, #4]
 800125a:	04d9      	lsls	r1, r3, #19
 800125c:	6922      	ldr	r2, [r4, #16]
 800125e:	6022      	str	r2, [r4, #0]
 8001260:	d504      	bpl.n	800126c <__sflush_r+0x7c>
 8001262:	1c42      	adds	r2, r0, #1
 8001264:	d101      	bne.n	800126a <__sflush_r+0x7a>
 8001266:	682b      	ldr	r3, [r5, #0]
 8001268:	b903      	cbnz	r3, 800126c <__sflush_r+0x7c>
 800126a:	6560      	str	r0, [r4, #84]	; 0x54
 800126c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800126e:	602f      	str	r7, [r5, #0]
 8001270:	2900      	cmp	r1, #0
 8001272:	d0ca      	beq.n	800120a <__sflush_r+0x1a>
 8001274:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8001278:	4299      	cmp	r1, r3
 800127a:	d002      	beq.n	8001282 <__sflush_r+0x92>
 800127c:	4628      	mov	r0, r5
 800127e:	f000 f8fb 	bl	8001478 <_free_r>
 8001282:	2000      	movs	r0, #0
 8001284:	6360      	str	r0, [r4, #52]	; 0x34
 8001286:	e7c1      	b.n	800120c <__sflush_r+0x1c>
 8001288:	6a21      	ldr	r1, [r4, #32]
 800128a:	2301      	movs	r3, #1
 800128c:	4628      	mov	r0, r5
 800128e:	47b0      	blx	r6
 8001290:	1c41      	adds	r1, r0, #1
 8001292:	d1c7      	bne.n	8001224 <__sflush_r+0x34>
 8001294:	682b      	ldr	r3, [r5, #0]
 8001296:	2b00      	cmp	r3, #0
 8001298:	d0c4      	beq.n	8001224 <__sflush_r+0x34>
 800129a:	2b1d      	cmp	r3, #29
 800129c:	d001      	beq.n	80012a2 <__sflush_r+0xb2>
 800129e:	2b16      	cmp	r3, #22
 80012a0:	d101      	bne.n	80012a6 <__sflush_r+0xb6>
 80012a2:	602f      	str	r7, [r5, #0]
 80012a4:	e7b1      	b.n	800120a <__sflush_r+0x1a>
 80012a6:	89a3      	ldrh	r3, [r4, #12]
 80012a8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012ac:	81a3      	strh	r3, [r4, #12]
 80012ae:	e7ad      	b.n	800120c <__sflush_r+0x1c>
 80012b0:	690f      	ldr	r7, [r1, #16]
 80012b2:	2f00      	cmp	r7, #0
 80012b4:	d0a9      	beq.n	800120a <__sflush_r+0x1a>
 80012b6:	0793      	lsls	r3, r2, #30
 80012b8:	680e      	ldr	r6, [r1, #0]
 80012ba:	bf08      	it	eq
 80012bc:	694b      	ldreq	r3, [r1, #20]
 80012be:	600f      	str	r7, [r1, #0]
 80012c0:	bf18      	it	ne
 80012c2:	2300      	movne	r3, #0
 80012c4:	eba6 0807 	sub.w	r8, r6, r7
 80012c8:	608b      	str	r3, [r1, #8]
 80012ca:	f1b8 0f00 	cmp.w	r8, #0
 80012ce:	dd9c      	ble.n	800120a <__sflush_r+0x1a>
 80012d0:	6a21      	ldr	r1, [r4, #32]
 80012d2:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80012d4:	4643      	mov	r3, r8
 80012d6:	463a      	mov	r2, r7
 80012d8:	4628      	mov	r0, r5
 80012da:	47b0      	blx	r6
 80012dc:	2800      	cmp	r0, #0
 80012de:	dc06      	bgt.n	80012ee <__sflush_r+0xfe>
 80012e0:	89a3      	ldrh	r3, [r4, #12]
 80012e2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80012e6:	81a3      	strh	r3, [r4, #12]
 80012e8:	f04f 30ff 	mov.w	r0, #4294967295
 80012ec:	e78e      	b.n	800120c <__sflush_r+0x1c>
 80012ee:	4407      	add	r7, r0
 80012f0:	eba8 0800 	sub.w	r8, r8, r0
 80012f4:	e7e9      	b.n	80012ca <__sflush_r+0xda>
 80012f6:	bf00      	nop
 80012f8:	20400001 	.word	0x20400001

080012fc <_fflush_r>:
 80012fc:	b538      	push	{r3, r4, r5, lr}
 80012fe:	690b      	ldr	r3, [r1, #16]
 8001300:	4605      	mov	r5, r0
 8001302:	460c      	mov	r4, r1
 8001304:	b913      	cbnz	r3, 800130c <_fflush_r+0x10>
 8001306:	2500      	movs	r5, #0
 8001308:	4628      	mov	r0, r5
 800130a:	bd38      	pop	{r3, r4, r5, pc}
 800130c:	b118      	cbz	r0, 8001316 <_fflush_r+0x1a>
 800130e:	6983      	ldr	r3, [r0, #24]
 8001310:	b90b      	cbnz	r3, 8001316 <_fflush_r+0x1a>
 8001312:	f7ff fa4f 	bl	80007b4 <__sinit>
 8001316:	4b14      	ldr	r3, [pc, #80]	; (8001368 <_fflush_r+0x6c>)
 8001318:	429c      	cmp	r4, r3
 800131a:	d11b      	bne.n	8001354 <_fflush_r+0x58>
 800131c:	686c      	ldr	r4, [r5, #4]
 800131e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001322:	2b00      	cmp	r3, #0
 8001324:	d0ef      	beq.n	8001306 <_fflush_r+0xa>
 8001326:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001328:	07d0      	lsls	r0, r2, #31
 800132a:	d404      	bmi.n	8001336 <_fflush_r+0x3a>
 800132c:	0599      	lsls	r1, r3, #22
 800132e:	d402      	bmi.n	8001336 <_fflush_r+0x3a>
 8001330:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001332:	f7ff fadd 	bl	80008f0 <__retarget_lock_acquire_recursive>
 8001336:	4628      	mov	r0, r5
 8001338:	4621      	mov	r1, r4
 800133a:	f7ff ff59 	bl	80011f0 <__sflush_r>
 800133e:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8001340:	07da      	lsls	r2, r3, #31
 8001342:	4605      	mov	r5, r0
 8001344:	d4e0      	bmi.n	8001308 <_fflush_r+0xc>
 8001346:	89a3      	ldrh	r3, [r4, #12]
 8001348:	059b      	lsls	r3, r3, #22
 800134a:	d4dd      	bmi.n	8001308 <_fflush_r+0xc>
 800134c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800134e:	f7ff fad0 	bl	80008f2 <__retarget_lock_release_recursive>
 8001352:	e7d9      	b.n	8001308 <_fflush_r+0xc>
 8001354:	4b05      	ldr	r3, [pc, #20]	; (800136c <_fflush_r+0x70>)
 8001356:	429c      	cmp	r4, r3
 8001358:	d101      	bne.n	800135e <_fflush_r+0x62>
 800135a:	68ac      	ldr	r4, [r5, #8]
 800135c:	e7df      	b.n	800131e <_fflush_r+0x22>
 800135e:	4b04      	ldr	r3, [pc, #16]	; (8001370 <_fflush_r+0x74>)
 8001360:	429c      	cmp	r4, r3
 8001362:	bf08      	it	eq
 8001364:	68ec      	ldreq	r4, [r5, #12]
 8001366:	e7da      	b.n	800131e <_fflush_r+0x22>
 8001368:	080015bc 	.word	0x080015bc
 800136c:	080015dc 	.word	0x080015dc
 8001370:	0800159c 	.word	0x0800159c

08001374 <_lseek_r>:
 8001374:	b538      	push	{r3, r4, r5, lr}
 8001376:	4d07      	ldr	r5, [pc, #28]	; (8001394 <_lseek_r+0x20>)
 8001378:	4604      	mov	r4, r0
 800137a:	4608      	mov	r0, r1
 800137c:	4611      	mov	r1, r2
 800137e:	2200      	movs	r2, #0
 8001380:	602a      	str	r2, [r5, #0]
 8001382:	461a      	mov	r2, r3
 8001384:	f7ff f876 	bl	8000474 <_lseek>
 8001388:	1c43      	adds	r3, r0, #1
 800138a:	d102      	bne.n	8001392 <_lseek_r+0x1e>
 800138c:	682b      	ldr	r3, [r5, #0]
 800138e:	b103      	cbz	r3, 8001392 <_lseek_r+0x1e>
 8001390:	6023      	str	r3, [r4, #0]
 8001392:	bd38      	pop	{r3, r4, r5, pc}
 8001394:	200000a0 	.word	0x200000a0

08001398 <__swhatbuf_r>:
 8001398:	b570      	push	{r4, r5, r6, lr}
 800139a:	460e      	mov	r6, r1
 800139c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80013a0:	2900      	cmp	r1, #0
 80013a2:	b096      	sub	sp, #88	; 0x58
 80013a4:	4614      	mov	r4, r2
 80013a6:	461d      	mov	r5, r3
 80013a8:	da07      	bge.n	80013ba <__swhatbuf_r+0x22>
 80013aa:	2300      	movs	r3, #0
 80013ac:	602b      	str	r3, [r5, #0]
 80013ae:	89b3      	ldrh	r3, [r6, #12]
 80013b0:	061a      	lsls	r2, r3, #24
 80013b2:	d410      	bmi.n	80013d6 <__swhatbuf_r+0x3e>
 80013b4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80013b8:	e00e      	b.n	80013d8 <__swhatbuf_r+0x40>
 80013ba:	466a      	mov	r2, sp
 80013bc:	f000 f8be 	bl	800153c <_fstat_r>
 80013c0:	2800      	cmp	r0, #0
 80013c2:	dbf2      	blt.n	80013aa <__swhatbuf_r+0x12>
 80013c4:	9a01      	ldr	r2, [sp, #4]
 80013c6:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80013ca:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80013ce:	425a      	negs	r2, r3
 80013d0:	415a      	adcs	r2, r3
 80013d2:	602a      	str	r2, [r5, #0]
 80013d4:	e7ee      	b.n	80013b4 <__swhatbuf_r+0x1c>
 80013d6:	2340      	movs	r3, #64	; 0x40
 80013d8:	2000      	movs	r0, #0
 80013da:	6023      	str	r3, [r4, #0]
 80013dc:	b016      	add	sp, #88	; 0x58
 80013de:	bd70      	pop	{r4, r5, r6, pc}

080013e0 <__smakebuf_r>:
 80013e0:	898b      	ldrh	r3, [r1, #12]
 80013e2:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80013e4:	079d      	lsls	r5, r3, #30
 80013e6:	4606      	mov	r6, r0
 80013e8:	460c      	mov	r4, r1
 80013ea:	d507      	bpl.n	80013fc <__smakebuf_r+0x1c>
 80013ec:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80013f0:	6023      	str	r3, [r4, #0]
 80013f2:	6123      	str	r3, [r4, #16]
 80013f4:	2301      	movs	r3, #1
 80013f6:	6163      	str	r3, [r4, #20]
 80013f8:	b002      	add	sp, #8
 80013fa:	bd70      	pop	{r4, r5, r6, pc}
 80013fc:	ab01      	add	r3, sp, #4
 80013fe:	466a      	mov	r2, sp
 8001400:	f7ff ffca 	bl	8001398 <__swhatbuf_r>
 8001404:	9900      	ldr	r1, [sp, #0]
 8001406:	4605      	mov	r5, r0
 8001408:	4630      	mov	r0, r6
 800140a:	f7ff fa73 	bl	80008f4 <_malloc_r>
 800140e:	b948      	cbnz	r0, 8001424 <__smakebuf_r+0x44>
 8001410:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001414:	059a      	lsls	r2, r3, #22
 8001416:	d4ef      	bmi.n	80013f8 <__smakebuf_r+0x18>
 8001418:	f023 0303 	bic.w	r3, r3, #3
 800141c:	f043 0302 	orr.w	r3, r3, #2
 8001420:	81a3      	strh	r3, [r4, #12]
 8001422:	e7e3      	b.n	80013ec <__smakebuf_r+0xc>
 8001424:	4b0d      	ldr	r3, [pc, #52]	; (800145c <__smakebuf_r+0x7c>)
 8001426:	62b3      	str	r3, [r6, #40]	; 0x28
 8001428:	89a3      	ldrh	r3, [r4, #12]
 800142a:	6020      	str	r0, [r4, #0]
 800142c:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8001430:	81a3      	strh	r3, [r4, #12]
 8001432:	9b00      	ldr	r3, [sp, #0]
 8001434:	6163      	str	r3, [r4, #20]
 8001436:	9b01      	ldr	r3, [sp, #4]
 8001438:	6120      	str	r0, [r4, #16]
 800143a:	b15b      	cbz	r3, 8001454 <__smakebuf_r+0x74>
 800143c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001440:	4630      	mov	r0, r6
 8001442:	f000 f88d 	bl	8001560 <_isatty_r>
 8001446:	b128      	cbz	r0, 8001454 <__smakebuf_r+0x74>
 8001448:	89a3      	ldrh	r3, [r4, #12]
 800144a:	f023 0303 	bic.w	r3, r3, #3
 800144e:	f043 0301 	orr.w	r3, r3, #1
 8001452:	81a3      	strh	r3, [r4, #12]
 8001454:	89a0      	ldrh	r0, [r4, #12]
 8001456:	4305      	orrs	r5, r0
 8001458:	81a5      	strh	r5, [r4, #12]
 800145a:	e7cd      	b.n	80013f8 <__smakebuf_r+0x18>
 800145c:	0800074d 	.word	0x0800074d

08001460 <__malloc_lock>:
 8001460:	4801      	ldr	r0, [pc, #4]	; (8001468 <__malloc_lock+0x8>)
 8001462:	f7ff ba45 	b.w	80008f0 <__retarget_lock_acquire_recursive>
 8001466:	bf00      	nop
 8001468:	20000098 	.word	0x20000098

0800146c <__malloc_unlock>:
 800146c:	4801      	ldr	r0, [pc, #4]	; (8001474 <__malloc_unlock+0x8>)
 800146e:	f7ff ba40 	b.w	80008f2 <__retarget_lock_release_recursive>
 8001472:	bf00      	nop
 8001474:	20000098 	.word	0x20000098

08001478 <_free_r>:
 8001478:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800147a:	2900      	cmp	r1, #0
 800147c:	d048      	beq.n	8001510 <_free_r+0x98>
 800147e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8001482:	9001      	str	r0, [sp, #4]
 8001484:	2b00      	cmp	r3, #0
 8001486:	f1a1 0404 	sub.w	r4, r1, #4
 800148a:	bfb8      	it	lt
 800148c:	18e4      	addlt	r4, r4, r3
 800148e:	f7ff ffe7 	bl	8001460 <__malloc_lock>
 8001492:	4a20      	ldr	r2, [pc, #128]	; (8001514 <_free_r+0x9c>)
 8001494:	9801      	ldr	r0, [sp, #4]
 8001496:	6813      	ldr	r3, [r2, #0]
 8001498:	4615      	mov	r5, r2
 800149a:	b933      	cbnz	r3, 80014aa <_free_r+0x32>
 800149c:	6063      	str	r3, [r4, #4]
 800149e:	6014      	str	r4, [r2, #0]
 80014a0:	b003      	add	sp, #12
 80014a2:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80014a6:	f7ff bfe1 	b.w	800146c <__malloc_unlock>
 80014aa:	42a3      	cmp	r3, r4
 80014ac:	d90b      	bls.n	80014c6 <_free_r+0x4e>
 80014ae:	6821      	ldr	r1, [r4, #0]
 80014b0:	1862      	adds	r2, r4, r1
 80014b2:	4293      	cmp	r3, r2
 80014b4:	bf04      	itt	eq
 80014b6:	681a      	ldreq	r2, [r3, #0]
 80014b8:	685b      	ldreq	r3, [r3, #4]
 80014ba:	6063      	str	r3, [r4, #4]
 80014bc:	bf04      	itt	eq
 80014be:	1852      	addeq	r2, r2, r1
 80014c0:	6022      	streq	r2, [r4, #0]
 80014c2:	602c      	str	r4, [r5, #0]
 80014c4:	e7ec      	b.n	80014a0 <_free_r+0x28>
 80014c6:	461a      	mov	r2, r3
 80014c8:	685b      	ldr	r3, [r3, #4]
 80014ca:	b10b      	cbz	r3, 80014d0 <_free_r+0x58>
 80014cc:	42a3      	cmp	r3, r4
 80014ce:	d9fa      	bls.n	80014c6 <_free_r+0x4e>
 80014d0:	6811      	ldr	r1, [r2, #0]
 80014d2:	1855      	adds	r5, r2, r1
 80014d4:	42a5      	cmp	r5, r4
 80014d6:	d10b      	bne.n	80014f0 <_free_r+0x78>
 80014d8:	6824      	ldr	r4, [r4, #0]
 80014da:	4421      	add	r1, r4
 80014dc:	1854      	adds	r4, r2, r1
 80014de:	42a3      	cmp	r3, r4
 80014e0:	6011      	str	r1, [r2, #0]
 80014e2:	d1dd      	bne.n	80014a0 <_free_r+0x28>
 80014e4:	681c      	ldr	r4, [r3, #0]
 80014e6:	685b      	ldr	r3, [r3, #4]
 80014e8:	6053      	str	r3, [r2, #4]
 80014ea:	4421      	add	r1, r4
 80014ec:	6011      	str	r1, [r2, #0]
 80014ee:	e7d7      	b.n	80014a0 <_free_r+0x28>
 80014f0:	d902      	bls.n	80014f8 <_free_r+0x80>
 80014f2:	230c      	movs	r3, #12
 80014f4:	6003      	str	r3, [r0, #0]
 80014f6:	e7d3      	b.n	80014a0 <_free_r+0x28>
 80014f8:	6825      	ldr	r5, [r4, #0]
 80014fa:	1961      	adds	r1, r4, r5
 80014fc:	428b      	cmp	r3, r1
 80014fe:	bf04      	itt	eq
 8001500:	6819      	ldreq	r1, [r3, #0]
 8001502:	685b      	ldreq	r3, [r3, #4]
 8001504:	6063      	str	r3, [r4, #4]
 8001506:	bf04      	itt	eq
 8001508:	1949      	addeq	r1, r1, r5
 800150a:	6021      	streq	r1, [r4, #0]
 800150c:	6054      	str	r4, [r2, #4]
 800150e:	e7c7      	b.n	80014a0 <_free_r+0x28>
 8001510:	b003      	add	sp, #12
 8001512:	bd30      	pop	{r4, r5, pc}
 8001514:	20000084 	.word	0x20000084

08001518 <_read_r>:
 8001518:	b538      	push	{r3, r4, r5, lr}
 800151a:	4d07      	ldr	r5, [pc, #28]	; (8001538 <_read_r+0x20>)
 800151c:	4604      	mov	r4, r0
 800151e:	4608      	mov	r0, r1
 8001520:	4611      	mov	r1, r2
 8001522:	2200      	movs	r2, #0
 8001524:	602a      	str	r2, [r5, #0]
 8001526:	461a      	mov	r2, r3
 8001528:	f7fe ff44 	bl	80003b4 <_read>
 800152c:	1c43      	adds	r3, r0, #1
 800152e:	d102      	bne.n	8001536 <_read_r+0x1e>
 8001530:	682b      	ldr	r3, [r5, #0]
 8001532:	b103      	cbz	r3, 8001536 <_read_r+0x1e>
 8001534:	6023      	str	r3, [r4, #0]
 8001536:	bd38      	pop	{r3, r4, r5, pc}
 8001538:	200000a0 	.word	0x200000a0

0800153c <_fstat_r>:
 800153c:	b538      	push	{r3, r4, r5, lr}
 800153e:	4d07      	ldr	r5, [pc, #28]	; (800155c <_fstat_r+0x20>)
 8001540:	2300      	movs	r3, #0
 8001542:	4604      	mov	r4, r0
 8001544:	4608      	mov	r0, r1
 8001546:	4611      	mov	r1, r2
 8001548:	602b      	str	r3, [r5, #0]
 800154a:	f7fe ff78 	bl	800043e <_fstat>
 800154e:	1c43      	adds	r3, r0, #1
 8001550:	d102      	bne.n	8001558 <_fstat_r+0x1c>
 8001552:	682b      	ldr	r3, [r5, #0]
 8001554:	b103      	cbz	r3, 8001558 <_fstat_r+0x1c>
 8001556:	6023      	str	r3, [r4, #0]
 8001558:	bd38      	pop	{r3, r4, r5, pc}
 800155a:	bf00      	nop
 800155c:	200000a0 	.word	0x200000a0

08001560 <_isatty_r>:
 8001560:	b538      	push	{r3, r4, r5, lr}
 8001562:	4d06      	ldr	r5, [pc, #24]	; (800157c <_isatty_r+0x1c>)
 8001564:	2300      	movs	r3, #0
 8001566:	4604      	mov	r4, r0
 8001568:	4608      	mov	r0, r1
 800156a:	602b      	str	r3, [r5, #0]
 800156c:	f7fe ff77 	bl	800045e <_isatty>
 8001570:	1c43      	adds	r3, r0, #1
 8001572:	d102      	bne.n	800157a <_isatty_r+0x1a>
 8001574:	682b      	ldr	r3, [r5, #0]
 8001576:	b103      	cbz	r3, 800157a <_isatty_r+0x1a>
 8001578:	6023      	str	r3, [r4, #0]
 800157a:	bd38      	pop	{r3, r4, r5, pc}
 800157c:	200000a0 	.word	0x200000a0

08001580 <_init>:
 8001580:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001582:	bf00      	nop
 8001584:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001586:	bc08      	pop	{r3}
 8001588:	469e      	mov	lr, r3
 800158a:	4770      	bx	lr

0800158c <_fini>:
 800158c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800158e:	bf00      	nop
 8001590:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001592:	bc08      	pop	{r3}
 8001594:	469e      	mov	lr, r3
 8001596:	4770      	bx	lr
